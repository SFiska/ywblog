[{"title":"文件管理和IO重定向","url":"/posts/43d26e1b/","content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n# 文件管理和IO重定向\n\n**内容概述:**\n\n**文件系统目录结构**\n\n**创建和查看文件**\n\n**复制、转移和删除文件**\n\n**软和硬链接**\n\n**IO重定向和管道**\n\n## **文件系统目录结构**\n\n![image-20250702131615108](%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%92%8CIO%E9%87%8D%E5%AE%9A%E5%90%91.assets/image-20250702131615108.png)\n\n### **文件系统的目录结构**\n\n文件和目录被组织成一个`单根`倒置树结构\n\n文件系统从根目录下开始，用“`/`”表示\n\n根文件系统(rootfs)：root filesystem\n\n标准Linux文件系统（如：`ext4`），文件名称大小写敏感，例如：MAIL, Mail, mail, mAiL\n\n以 `.` 开头的文件为隐藏文件\n\n路径分隔的 `/`\n\n文件名最长255个字节\n\n包括路径在内文件名称最长4095个字节\n\n`蓝色-->目录` `绿色-->可执行文件` `红色-->压缩文件` `浅蓝色-->链接文件` `灰色-->其他文件`\n\n除了斜杠和NUL,所有字符都有效.但使用特殊字符的目录名和文件不推荐使用，有些字符需要用引号来引用\n\n每个文件都有两类相关数据：元数据：metadata，即属性， 数据：data，即文件内容\n\nLinux的文件系统分层结构：FHS Filesystem Hierarchy Standard\n\n### **常见的文件系统目录功能**\n\n`/boot`：引导文件存放目录，内核文件(vmlinuz)、引导加载器(bootloader, grub)都存放于此目录\n\n`/bin`：所有用户使用的基本命令；不能关联至独立分区，OS启动即会用到的程序\n\n`/sbin`：管理类的基本命令；不能关联至独立分区，OS启动即会用到的程序\n\n`/lib`：启动时程序依赖的基本共享库文件以及内核模块文件(/lib/modules)\n\n`/lib64`：专用于x86_64系统上的辅助共享库文件存放位置\n\n`/etc`：配置文件目录\n\n`/home/USERNAME`：普通用户家目录\n\n`/root`：管理员的家目录\n\n`/media`：便携式移动设备挂载点\n\n`/mnt`：临时文件系统挂载点\n\n`/dev`：设备文件及特殊文件存储位置\n\n   b: block device，随机访问\n\n   c: character device，线性访问\n\n`/opt`：第三方应用程序的安装位置\n\n`/srv`：系统上运行的服务用到的数据\n\n`/tmp`：临时文件存储位置\n\n`/usr`: universal shared, read-only data\n\n   bin: 保证系统拥有完整功能而提供的应用程序\n\n   sbin:\n\n   lib：32位使用\n\n   lib64：只存在64位系统\n\n   include: C程序的头文件(header files)\n\n   share：结构化独立的数据，例如doc, man等\n\n​      local：第三方应用程序的安装位置\n\n​        bin, sbin, lib, lib64, etc, share\n\n`/var`: variable data files\n\n   cache: 应用程序缓存数据目录\n\n   lib: 应用程序状态信息数据\n\n   local：专用于为/usr/local下的应用程序存储可变数据\n\n   lock: 锁文件\n\n   log: 日志目录及文件\n\n   opt: 专用于为/opt下的应用程序存储可变数据\n\n   run: 运行中的进程相关数据,通常用于存储进程pid文件\n\n   spool: 应用程序数据池\n\n   tmp: 保存系统两次重启之间产生的临时数据\n\n`/proc`: 用于输出内核与进程信息相关的虚拟文件系统\n\n`/sys：`用于输出当前系统上硬件设备相关信息虚拟文件系统\n\n`/selinux`: security enhanced Linux，selinux相关的安全策略等信息的存储位置\n\n### **应用程序的组成部分**\n\n二进制程序：/bin, /sbin, /usr/bin, /usr/sbin, /usr/local/bin, /usr/local/sbin\n\n库文件：/lib, /lib64, /usr/lib, /usr/lib64, /usr/local/lib, /usr/local/lib64\n\n配置文件：/etc, /etc/DIRECTORY, /usr/local/etc\n\n帮助文件：/usr/share/man, /usr/share/doc, /usr/local/share/man, \n\n/usr/local/share/doc\n\n### Linux下的文件类型\n\n`-` 普通文件\n`d` 目录文件directory\n`l` 符号链接文件link\n`b` 块设备block \n`c` 字符设备character\n`p` 管道文件pipe\n`s` 套接字文件socket\n\n```bash\n[root@centos7 ~]#ls -l /run/\ndrwxr-xr-x 2 root      root      100 Dec 9 20:41 abrt\n-rw------- 1 root      root       11 Dec 9 20:41 alsactl.pid\nprw------- 1 root      root       0 Dec 9 20:41 autofs.fifo-net\nsrw-rw-rw- 1 root      root       0 Dec 9 20:41 gssproxy.sock\n```\n\n## **文件操作命令**\n\n### **显示当前工作目录**\n\n每个shell和系统进程都有一个当前的工作目录 CWD：current work directory\n\n显示当前shell CWD的绝对路径\n\n`pwd`命令: printing working directory\n\n-P 显示真实物理路径\n\n-L 显示链接路径（默认）\n\n### **绝对和相对路径**\n\n绝对路径\n\n  以正斜杠/ 即根目录开始\n\n  完整的文件的位置路径\n\n  可用于任何想指定一个文件名的时候\n\n相对路径名\n\n  不以斜线开始\n\n  一般情况下，是指相对于当前工作目录的路径，特殊场景下，是相对于某目录的位置\n\n  可以作为一个简短的形式指定一个文件名\n\n基名：basename，只取文件名而不要路径\n\n目录名：dirname，只取路径，不要文件名\n\n范例:\n\n```bash\n[root@centos8 bin]#basename /etc/sysconfig/network\nnetwork\n[root@centos8 bin]#dirname /etc/sysconfig/network\n/etc/sysconfig\n[root@centos8 ~]#dirname /etc/sysconfig/network-scripts/ifcfg-eth0\n/etc/sysconfig/network-scripts\n[root@centos8 ~]#basename /etc/sysconfig/network-scripts/ifcfg-eth0\nifcfg-eth0\n\n[root@ubuntu2004 ~]#basename http://nginx.org/download/nginx-1.18.0.tar.gz\nnginx-1.18.0.tar.gz\n[root@ubuntu2004 ~]#basename http://nginx.org/download/nginx-1.18.0.tar.gz \n.tar.gz\nnginx-1.18.0\n[root@ubuntu2004 ~]#basename -s .tar.gz http://nginx.org/download/nginx-\n1.18.0.tar.gz \nnginx-1.18.0\n[root@ubuntu2004 ~]#url=http://nginx.org/download/nginx-1.18.0.tar.gz\n[root@ubuntu2004 ~]#echo $url\nhttp://nginx.org/download/nginx-1.18.0.tar.gz\n[root@ubuntu2004 ~]#basename $url\nnginx-1.18.0.tar.gz\n```\n\n### **更改目录**\n\n命令 cd ： change directory 改变目录\n\n选项：-P 切换至物理路径，而非软链接目录\n\n可以使用绝对或相对路径\n\n切换至父目录： cd ..\n\n切换至当前用户主目录： cd\n\n切换至以前的工作目录： cd -\n\n范例：\n\n```bash\n[root@centos8 ~]#cd /etc/sysconfig\n[root@centos8 sysconfig]#pwd\n/etc/sysconfig\n[root@centos8 sysconfig]#cd ../../data\n[root@centos8 data]#pwd\n/data\n[root@centos8 data]#cd /bin\n[root@centos8 bin]#pwd\n/bin\n[root@centos8 bin]#cd -P /bin \n[root@centos8 bin]#pwd\n/usr/bin\n```\n\n相关的环境变量：\n\nPWD：当前目录路径\n\nOLDPWD：上一次目录路径\n\n范例：\n\n```bash\n[root@centos8 ~]#echo $OLDPWD\n/etc/sysconfig\n[root@centos8 ~]#cd -\n/etc/sysconfig\n[root@centos8 sysconfig]#pwd\n/etc/sysconfig\n[root@centos8 sysconfig]#\n```\n\n### **列出目录内容**\n\nls 命令可以列出当前目录的内容或指定目录\n\n用法：\n\n```bash\nls [options] [files_or_dirs]\n```\n\n常见选项：\n\n```bash\n-a 包含隐藏文件\n-l 显示额外的信息\n-R 目录递归\n-ld 目录和符号链接信息\n-1 文件分行显示\n-S 按从大到小排序\n-t 按mtime排序\n-u 配合-t选项，显示并按atime从新到旧排序\n-U 按目录存放顺序显示\n-X 按文件后缀排序\n-F 对不同类型文件显示时附加不同的符号：*/=>@|\n-C 文件多时，以多列的方式显示文件，默认是一列（标准输出）\n```\n\n> ls 查看不同后缀文件时的颜色由 /etc/DIR_COLORS 和@LS_COLORS变量定义\n>\n> ls -l 看到文件的大小,不一定是实际文件真正占用空间的大小\n\n```bash\n[root@centos8 ~]#vim /etc/DIR_COLORS\n.jpg 01;31 #修改此行\n[root@centos8 ~]#exit \n[root@centos8 ~]#echo $LS_COLORS\nrs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:\nor=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44\n:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;3\n1:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z\n=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=\n01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.t\nbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31\n:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=0\n1;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jp\ng=01;31:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01\n;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.ti\nff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;3\n5:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp\n4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:\n*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01\n;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=\n01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.\nmid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;3\n6:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:\n```\n\n范例：别名ll\n\n```bash\n[root@centos8 ~]#alias ll\nalias ll='ls -l --color=auto'\n[root@ubuntu ~]#alias ll\nalias ll='ls -alF'\n```\n\n### **查看文件状态** **stat**\n\n文件相关信息：metadata, data\n\n每个文件有三个时间戳：\n\naccess time 访问时间，atime，读取文件内容\n\nmodify time 修改时间，mtime，改变文件内容（数据）\n\nchange time 改变时间，ctime，元数据发生改变\n\n```bash\n[root@centos8 ~]#stat /etc/passwd\n File: /etc/passwd\n Size: 1306   Blocks: 8     IO Block: 4096  regular file\nDevice: 802h/2050d Inode: 134792556  Links: 1\nAccess: (0644/-rw-r--r--) Uid: (  0/  root)  Gid: (  0/  root)\nAccess: 2019-12-09 20:37:12.830991350 +0800\nModify: 2019-12-09 20:37:12.826991351 +0800\nChange: 2019-12-09 20:37:12.826991351 +0800\n Birth: -\n```\n\n### **确定文件内容**\n\n文件可以包含多种类型的数据，使用file命令检查文件的类型，然后确定适当的打开命令或应用程序使用\n\n格式：\n\n```bash\nfile [options] <filename>...\n```\n\n常用选项:\n\n```bash\n-b 列出文件辨识结果时，不显示文件名称\n-f filelist 列出文件filelist中文件名的文件类型\n-F 使用指定分隔符号替换输出文件名后默认的”:”分隔符\n-L 查看对应软链接对应文件的文件类型\n--help 显示命令在线帮助\n```\n\n范例：windows的文本格式和Linux的文本格式的区别\n\n```bash\n[root@centos8 data]#cat linux.txt\na\nb\nc\n[root@centos8 data]#cat win.txt\na\nb\nc\n[root@centos8 data]#file win.txt linux.txt\nwin.txt:  ASCII text, with CRLF line terminators\nlinux.txt: ASCII text\n[root@centos8 data]#hexdump -C linux.txt\n00000000 61 0a 62 0a 63 0a                 |a.b.c.|\n00000006\n[root@centos8 data]#hexdump -C win.txt\n00000000 61 0d 0a 62 0d 0a 63               |a..b..c|\n00000007\n#安装转换工具\n[root@centos8 data]#dnf -y install dos2unix\n#将Windows的文本格式转换成的Linux文本格式\n[root@centos8 data]#dos2unix win.txt\ndos2unix: converting file win.txt to Unix format...\n[root@centos8 data]#file win.txt\nwin.txt: ASCII text\n#将Linux的文本格式转换成Windows的文本格式\n[root@centos8 data]#unix2dos win.txt\nunix2dos: converting file win.txt to DOS format...\n[root@centos8 data]#file win.txt\nwin.txt: ASCII text, with CRLF line terminators\n```\n\n范例：转换文件字符集编码\n\n```bash\n#显示支持字符集编码列表\n[root@centos8 ~]#iconv -l\n#windows7上文本默认的编码ANSI（GB2312）\n[root@centos8 data]#file windows.txt\nwindows.txt: ISO-8859 text, with no line terminators\n[root@centos8 data]#echo $LANG\nen_US.UTF-8\n#默认在linux无法正常显示文本内容\n[root@centos8 data]#cat windows.txt\n[root@centos8 data]#\n#将windows7上文本默认的编码ANSI（GB2312）转换成UTF-8\n[root@centos8 data]#iconv -f gb2312 windows.txt -o windows1.txt\n[root@centos8 data]#cat windows1.txt\n马哥教育[root@centos8 data]#ll windows1.txt\n-rw-r--r-- 1 root root 12 Mar 23 10:13 windows1.txt\n[root@centos8 data]#file windows1.txt\nwindows1.txt: UTF-8 Unicode text, with no line terminators\n#将UTF-8转换成windows10上文本默认的编码ANSI（GB2312）\n[root@centos8 data]#iconv -f utf8 -t gb2312 windows1.txt -o windows2.txt\n[root@centos8 data]#file windows2.txt\nwindows2.txt: ISO-8859 text, with no line terminators\n```\n\n范例:\n\n```bash\n[15:34:50 root@centos8 ~]#file linux.txt\nlinux.txt: ASCII text\n[15:34:31 root@centos8 ~]#file windows.txt \nwindows.txt: ASCII text, with CRLF line terminators\n#将windows的文本格式转换成Linux的文本格式\n[15:35:26 root@centos8 ~]#dos2unix windows.txt \ndos2unix: converting file windows.txt to Unix format...\n[15:36:00 root@centos8 ~]#file windows.txt\nwindows.txt: ASCII text\n```\n\n范例：\n\n```bash\n[root@centos8 ~]#cat list.txt \n/etc/\n/bin\n/etc/issue\n[root@centos8 ~]#file -f list.txt\n/etc/:   directory\n/bin:    symbolic link to usr/bin\n/etc/issue: ASCII text\n```\n\n### 🌟文件通配符模式wildcard pattern\n\n文件通配符可以用来匹配符合条件的多个文件，方便批量管理文件\n\n通配符采有特定的符号，表示特定的含义，此特符号称为元 meta 字符\n\n常见的通配符如下：\n\n```bash\n* 匹配零个或多个字符，但不匹配 \".\" 开头的文件，即隐藏文件\n? 匹配任何单个字符,一个汉字也算一个字符\n~ 当前用户家目录\n~mage 用户mage家目录\n[0-9] 匹配数字范围\n[a-z] 一个字母\n[A-Z] 一个字母\n[wang] 匹配列表中的任何的一个字符\n[^wang] 匹配列表中的所有字符以外的字符\n[^a-z] 匹配列表中的所有字符以外的字符\n. 和 ~+ 当前工作目录\n~-  前一个工作目录\n```\n\n另外还有在Linux系统中预定义的字符类表示法如下：man 7 glob\n\n```bash\n[:digit:]：任意数字，相当于0-9\n[:lower:]：任意小写字母,表示 a-z\n[:upper:]: 任意大写字母,表示 A-Z \n[:alpha:]: 任意大小写字母\n[:alnum:]：任意数字或字母\n[:blank:]：水平空白字符\n[:space:]：水平或垂直空白字符\n[:punct:]：标点符号\n[:print:]：可打印字符\n[:cntrl:]：控制（非打印）字符\n[:graph:]：图形字符\n[:xdigit:]：十六进制字符\n```\n\n范例: [ ] 和 { }\n\n```bash\n[root@centos8 data]#ll f{1..5}\nls: cannot access 'f1': No such file or directory\nls: cannot access 'f2': No such file or directory\n-rw-r--r-- 1 root root 0 Nov 7 09:34 f3\n-rw-r--r-- 1 root root 0 Nov 7 09:34 f4\n-rw-r--r-- 1 root root 0 Nov 7 09:34 f5\n[root@centos8 data]#ll f[1-5]\n-rw-r--r-- 1 root root 0 Nov 7 09:34 f3\n-rw-r--r-- 1 root root 0 Nov 7 09:34 f4\n-rw-r--r-- 1 root root 0 Nov 7 09:34 f5\n[root@centos8 data]#ll f[a-c]\n-rw-r--r-- 1 root root 0 Nov 7 09:46 fa\n-rw-r--r-- 1 root root 0 Nov 7 09:46 fA\n-rw-r--r-- 1 root root 0 Nov 7 09:46 fb\n-rw-r--r-- 1 root root 0 Nov 7 09:46 fB\n-rw-r--r-- 1 root root 0 Nov 7 09:46 fc\n[root@centos8 data]#ll f{a..c}\n-rw-r--r-- 1 root root 0 Nov 7 09:46 fa\n-rw-r--r-- 1 root root 0 Nov 7 09:46 fb\n-rw-r--r-- 1 root root 0 Nov 7 09:46 fc\n```\n\n范例：\n\n```bash\n[root@centos8 data]#touch file{a..z}.txt file{A..Z}.txt file{0..9}.txt\n[root@centos8 data]#ll file{0..9}.txt\n-rw-r--r-- 1 root root 0 Mar 23 10:46 file0.txt\n-rw-r--r-- 1 root root 0 Mar 23 10:46 file1.txt\n-rw-r--r-- 1 root root 0 Mar 23 10:46 file2.txt\n-rw-r--r-- 1 root root 0 Mar 23 10:46 file3.txt\n-rw-r--r-- 1 root root 0 Mar 23 10:46 file4.txt\n-rw-r--r-- 1 root root 0 Mar 23 10:46 file5.txt\n-rw-r--r-- 1 root root 0 Mar 23 10:46 file6.txt\n-rw-r--r-- 1 root root 0 Mar 23 10:46 file7.txt\n-rw-r--r-- 1 root root 0 Mar 23 10:46 file8.txt\n-rw-r--r-- 1 root root 0 Mar 23 10:46 file9.txt\n[root@centos8 data]#ll file[0-9].txt\n-rw-r--r-- 1 root root 0 Mar 23 10:46 file0.txt\n-rw-r--r-- 1 root root 0 Mar 23 10:46 file1.txt\n-rw-r--r-- 1 root root 0 Mar 23 10:46 file2.txt\n-rw-r--r-- 1 root root 0 Mar 23 10:46 file3.txt\n-rw-r--r-- 1 root root 0 Mar 23 10:46 file4.txt\n-rw-r--r-- 1 root root 0 Mar 23 10:46 file5.txt\n-rw-r--r-- 1 root root 0 Mar 23 10:46 file6.txt\n-rw-r--r-- 1 root root 0 Mar 23 10:46 file7.txt\n-rw-r--r-- 1 root root 0 Mar 23 10:46 file8.txt\n-rw-r--r-- 1 root root 0 Mar 23 10:46 file9.txt\n[root@centos8 data]#ls file[a-c].txt\nfilea.txt fileA.txt fileb.txt fileB.txt filec.txt\n[root@centos8 data]#ls file[C-E].txt\nfileC.txt filed.txt fileD.txt filee.txt fileE.txt\n[root@centos8 data]#ls file[wang].txt\nfilea.txt fileg.txt filen.txt filew.txt\n[root@centos8 data]#ls file[^wang].txt\n```\n\n范例：\n\n```bash\n[root@centos8 data]#ls file[:lower:].txt\nfilee.txt filel.txt fileo.txt filer.txt filew.txt\n[root@centos8 data]#ls file[[:lower:]].txt\nfilea.txt filed.txt fileg.txt filej.txt filem.txt filep.txt files.txt \nfilev.txt filey.txt\nfileb.txt filee.txt fileh.txt filek.txt filen.txt fileq.txt filet.txt \nfilew.txt filez.txt\nfilec.txt filef.txt filei.txt filel.txt fileo.txt filer.txt fileu.txt \nfilex.txt\n```\n\n范例：比较有无*的功能区别\n\n```bash\n[root@centos8 data]#ls -a *\n[root@centos8 data]#ls -a\n```\n\n范例：\n\n```bash\n[root@centos8 ~]#ls -d /etc/*/\n[root@centos8 ~]#l.\n```\n\n范例：\n\n```bash\n[root@centos8 data]#touch file*.log\n[root@centos8 data]#touch file1.log\n[root@centos8 data]#ls file*.log\n file1.log 'file*.log'\n[root@centos8 data]#ls 'file*.log'\n'file*.log'\n[root@centos8 data]#ls 'file*.log'\n```\n\n### 练习\n\n1、显示/etc目录下所有以l开头，以一个小写字母结尾，且中间出现至少一位数字的文件或目录列表\n\n```bash\n[root@192 ~]# ls -d /etc/l*[0-9]*[a-z]\n/etc/l123df21a\n[root@192 ~]# ls -d /etc/l*[0-9]*[[:lower:]]\n/etc/l123se123a\n```\n\n2、显示/etc目录下以任意一位数字开头，且以非数字结尾的文件或目录列表\n\n```bash\n[root@192 ~]# ls /etc/[0-9]*[^0-9] -d\n/etc/1aa\n```\n\n3、显示/etc/目录下以非字母开头，后面跟了一个字母及其它任意长度任意字符的文件或目录列表\n\n```bash\n[root@192 ~]# ll -d /etc/[^[:alpha:]][[:alpha:]]*\ndrwxr-xr-x 2 root root 4096 Jul  2 14:24 /etc/1aa\n```\n\n4、显示/etc/目录下所有以rc开头，并后面是0-6之间的数字，其它为任意字符的文件或目录列表\n\n```bash\n[root@192 ~]# ls /etc/rc[0-6]* -d\n/etc/rc0.d  /etc/rc1.d  /etc/rc2.d  /etc/rc3.d  /etc/rc4.d  /etc/rc5.d  /etc/rc6.d\n```\n\n5、显示/etc目录下，所有.conf结尾，且以m,n,r,p开头的文件或目录列表\n\n```bash\n[root@192 ~]# ls /etc/[m,n,r,p]*.conf\n/etc/man_db.conf  /etc/nfs.conf       /etc/nsswitch.conf     /etc/resolv.conf  /etc/rsyslog.conf\n/etc/mke2fs.conf  /etc/nfsmount.conf  /etc/request-key.conf  /etc/rsyncd.conf\n```\n\n6、只显示/root下的隐藏文件和目录列表\n\n```bash\n[root@192 ~]# ll -a .*\n-rw-------. 1 root root 1110 Dec  8  2024 .bash_history\n-rw-r--r--. 1 root root   18 May 10  2024 .bash_logout\n-rw-r--r--. 1 root root  176 May 10  2024 .bash_profile\n-rw-r--r--. 1 root root  176 May 10  2024 .bashrc\n-rw-r--r--. 1 root root  100 May 10  2024 .cshrc\n-rw-r--r--. 1 root root  129 May 10  2024 .tcshrc\n-rw-------. 1 root root 2646 Dec  8  2024 .viminfo\n\n.cache:\ntotal 8\ndrwx------  2 root root 4096 Dec  8  2024 .\ndr-xr-x---. 4 root root 4096 Dec  8  2024 ..\n\n.ssh:\ntotal 8\ndrwx------. 2 root root 4096 Dec  8  2024 .\ndr-xr-x---. 4 root root 4096 Dec  8  2024 ..\n```\n\n7、只显示/etc下的非隐藏目录列表\n\n```bash\n[root@192 ~]# ls -d /etc/[^.]*\n/etc/1aa                      /etc/ipset                     /etc/protocols\n/etc/adjtime                  /etc/iscsi                     /etc/quotagrpadmins\n/etc/aliases                  /etc/isns                      /etc/quotatab\n/etc/alternatives             /etc/issue                     /etc/rc0.d\n/etc/anacrontab               /etc/issue.d                   /etc/rc1.d\n......\n```\n\n\n\n### **创建空文件和刷新时间**\n\ntouch命令可以用来创建空文件或刷新文件的时间\n\n```bash\n-a 仅改变 atime和ctime\n-m 仅改变 mtime和ctime\n-t [[CC]YY]MMDDhhmm[.ss] 指定atime和mtime的时间戳\n-c 如果文件不存在，则不予创建\n```\n\n范例\n\n```bash\n[root@centos8 data]#touch f1.txt\n[root@centos8 data]#ll\ntotal 0\n-rw-r--r-- 1 root root 0 Mar 23 11:30 f1.txt\n[root@centos8 data]#ll /etc/issue\n-rw-r--r--. 1 root root 23 Jan 2 23:21 /etc/issue\n[root@centos8 data]#touch /etc/issue\n[root@centos8 data]#ll /etc/issue\n-rw-r--r--. 1 root root 23 Mar 23 11:31 /etc/issue\n[root@centos8 data]#stat /etc/issue\n File: /etc/issue\n Size: 23       Blocks: 8     IO Block: 4096  regular file\nDevice: 802h/2050d   Inode: 134345998  Links: 1\nAccess: (0644/-rw-r--r--) Uid: (  0/  root)  Gid: (  0/  root)\nAccess: 2020-03-23 11:31:20.030291332 +0800\nModify: 2020-03-23 11:31:20.030291332 +0800\nChange: 2020-03-23 11:31:20.030291332 +0800\n Birth: -\n[root@centos8 data]#date\nFri Dec 13 16:11:55 CST 2019\n[root@centos8 data]#touch `date -d \"-1 day\" +%F_%T`.log\n[root@centos8 data]#ls\n2019-12-12_16:11:48.log\n[root@centos8 data]#touch $(date -d \"1 year\" +%F_%T).log\n[root@centos8 data]#ls\n2019-12-12_16:11:48.log 2020-12-13_16:13:11.log\n```\n\n### **复制文件和目录**\n\n利用 cp（copy）命令可以实现文件或目录的复制\n\n格式\n\n```bash\ncp [OPTION]... [-T] SOURCE DEST\ncp [OPTION]... SOURCE... DIRECTORY\ncp [OPTION]... -t DIRECTORY SOURCE...\n```\n\n常用选项\n\n```bash\n-i 如果目标已存在，覆盖前提示是否覆盖 \n-n 不覆盖，注意两者顺序\n-r, -R 递归复制目录及内部的所有内容\n-a 归档，相当于-dR --preserv=all，常用于备份功能\n-d --no-dereference --preserv=links 不复制原文件，只复制链接名\n--preserv[=ATTR_LIST\n  mode: 权限\n  ownership: 属主属组\n  timestamp:\n  links\n  xattr\n  context\n  all \n-p 等同--preserv=mode,ownership,timestamp\n-v --verbose\n-f --force\n-u --update 只复制源比目标更新文件或目标不存在的文件\n-b 目标存在，覆盖前先备份，默认形式为 filename~ ,只保留最近的一个备份\n--backup=numbered 目标存在，覆盖前先备份加数字后缀，形式为 filename.~#~ ，可以保留多\n个版本\n```\n\n| 源 \\ 目标                | 不存在                                              | 存在且为文件                                                 | 存在且为目录                                                 |\n| ------------------------ | --------------------------------------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| 一个文件                 | 新建DEST，并将SRC中的内容填充至DEST中               | 将SRC中的内容覆盖至DEST中，注意数据丢失风险！建议用 `-i` 选项 | 在DEST下新建与原文件同名的文件，并将SRC中内容填充至新文件中  |\n| 多个文件                 | 提示错误                                            | 提示错误                                                     | 在DEST下新建与原文件同名的文件，并将原文件内容复制进新文件中 |\n| 目录（须使用 `-r` 选项） | 创建指定DEST同名目录，复制SRC目录中所有文件至DEST下 | 提示错误                                                     | 在DEST下新建与原目录同名的目录，并将SRC中内容复制至新目录中  |\n\n范例:\n\n```bash\n[16:21:08 root@centos8 ~]#cp ~wang/issue /data/issue_wang.bak\n-rw-r--r--. 1 root root 86 Dec 13 16:21 /data/issue_wang.bak\n-rw-r--r--. 1 wang wang 86 Dec 13 16:18 /home/wang/issue\n[16:21:44 root@centos8 ~]#cp -p ~wang/issue /data/issue_wang2.bak\n[16:22:07 root@centos8 ~]#ll ~wang/issue /data/issue_wang2.bak\n-rw-r--r--. 1 wang wang 86 Dec 13 16:18 /data/issue_wang2.bak\n-rw-r--r--. 1 wang wang 86 Dec 13 16:18 /home/wang/issue\n[16:23:19 root@centos8 ~]#cp /etc/sysconfig/ /data/\ncp: -r not specified; omitting directory '/etc/sysconfig/'\n[16:23:40 root@centos8 ~]#cp -r /etc/sysconfig/ /data/\n[16:23:45 root@centos8 ~]#ll /data\ntotal 12\n-rw-r--r--. 1 root root  0 Dec 13 16:11 2019-12-12_16:11:48.log\n-rw-r--r--. 1 root root  0 Dec 13 16:13 2020-12-13_16:13:11.log\n-rw-r--r--. 1 wang wang  86 Dec 13 16:18 issue_wang2.bak\n-rw-r--r--. 1 root root  86 Dec 13 16:21 issue_wang.bak\ndrwxr-xr-x. 7 root root 4096 Dec 13 16:23 sysconfig\n[16:24:03 root@centos8 ~]#cp -r /etc/sysconfig/ /data/sysconfig_bak\n[16:24:34 root@centos8 ~]#ll /data\ntotal 16\n-rw-r--r--. 1 root root  0 Dec 13 16:11 2019-12-12_16:11:48.log\n-rw-r--r--. 1 root root  0 Dec 13 16:13 2020-12-13_16:13:11.log\n-rw-r--r--. 1 wang wang  86 Dec 13 16:18 issue_wang2.bak\n-rw-r--r--. 1 root root  86 Dec 13 16:21 issue_wang.bak\ndrwxr-xr-x. 7 root root 4096 Dec 13 16:23 sysconfig\ndrwxr-xr-x. 7 root root 4096 Dec 13 16:24 sysconfig_bak\n\n#用{}进行备份\n[root@192 ~]# cp /etc/yum.repos.d/openEuler.repo{,.bak}\n[root@192 ~]# ll /etc/yum.repos.d/\ntotal 8\n-rw-r--r--. 1 root root 2095 Dec  8  2024 openEuler.repo\n-rw-r--r--  1 root root 2095 Jul  2 14:53 openEuler.repo.bak\n[root@192 ~]#\n\n```\n\n\n\n范例：复制时如果覆盖先备份再覆盖\n\n```bash\n[16:32:43 root@centos8 ~]#cp -b /etc/motd /data/issue\ncp: overwrite '/data/issue'? y \n[16:33:09 root@centos8 ~]#ll /data\ntotal 8\n-rw-r--r--. 1 root root  1 Dec 13 16:33 issue\n-rw-r--r--. 1 root root 2610 Dec 13 16:32 issue~\n[16:33:11 root@centos8 ~]#cp -b /etc/fstab /data/issue\ncp: overwrite '/data/issue'? y\n[16:33:55 root@centos8 ~]#ll /data\ntotal 8\n-rw-r--r--. 1 root root 709 Dec 13 16:33 issue\n-rw-r--r--. 1 root root  1 Dec 13 16:33 issue~\n[16:33:56 root@centos8 ~]#cp --backup=numbered  /etc/fstab /data/issue\ncp: overwrite '/data/issue'? y\n[16:34:32 root@centos8 ~]#cp --backup=numbered  /etc/shadow /data/issue\ncp: overwrite '/data/issue'? y\n[16:34:41 root@centos8 ~]#cp --backup=numbered  /etc/os-release /data/issue\ncp: overwrite '/data/issue'? y\n[16:34:48 root@centos8 ~]#ll /data\ntotal 20\n-rw-r--r--. 1 root root 420 Dec 13 16:34 issue\n-rw-r--r--. 1 root root  1 Dec 13 16:33 issue~\n-rw-r--r--. 1 root root 709 Dec 13 16:33 issue.~1~\n-rw-r--r--. 1 root root 709 Dec 13 16:34 issue.~2~\n----------. 1 root root 1349 Dec 13 16:34 issue.~3~\n```\n\n范例：\n\n```bash\n[root@centos8 ~]#cp /dev/zero /data/zero.bak\n```\n\n**练习**\n\n1、每天将/etc/目录下所有文件，备份到/data独立的子目录下，并要求子目录格式为 backupYYYYmm-dd，备份过程可见\n\n```bash\n[root@centos8 ~]#cp -av /etc/ /data/backup`date +%F`\n[root@centos8 ~]#cp -av /etc/ /data/etc-`date +%F_%H-%M-%S\n```\n\n2、创建/data/rootdir目录，并复制/root下所有文件到该目录内，要求保留原有权限\n\n```bash\n[root@centos8 ~]#cp -a /root /data/rootdir\n```\n\n### **移动和重命名文件**\n\n`mv 命令可以实现文件或目录的移动和改名`\n\n同一分区移动数据,速度很快:数据位置没有变化\n\n不同分区移动数据,速度相对慢:数据位置发生了变化\n\n格式：\n\n```bash\nmv [OPTION]... [-T] SOURCE DEST\nmv [OPTION]... SOURCE... DIRECTORY\nmv [OPTION]... -t DIRECTORY SOURCE...\n```\n\n常用选项：\n\n-i 交互式\n\n-f 强制\n\n-b 目标存在，覆盖前先备份\n\n`利用 rename 可以批量修改文件名`\n\n格式：\n\n```bash\nrename [options] <expression> <replacement> <file>...\n```\n\n范例：\n\n```bash\n#为所有的f开头包含conf的文件加上.bak后缀：\nrename 'conf'  'conf.bak'  f* \n#去掉所有的bak后缀：\nrename '.bak' '' *.bak\n```\n\n### **删除文件**\n\n![image-20250702151212725](%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%92%8CIO%E9%87%8D%E5%AE%9A%E5%90%91.assets/image-20250702151212725.png)\n\n使用 rm 命令可以删除文件和目录\n\n注意：此命令非常危险，慎重使用，建议使用 mv 代替 rm\n\n格式：\n\n```bash\nrm [OPTION]... FILE...\n```\n\n常用选项：\n\n```bash\n-i 交互式\n-f 强制删除\n-r 递归\n--no-preserve-root 删除/ \n```\n\n范例：\n\n```bash\n[root@centos8 ~]#rm -rf /\nrm: it is dangerous to operate recursively on '/'\nrm: use --no-preserve-root to override this failsafe\n#思考删除/ 文件,如何验证【谨慎操作】\n[root@centos8 ~]#rm -rf /*\n[root@centos8 ~]#/2TAB\n[root@centos8 ~]#echo *\n```\n\n范例： rm 别名\n\n```bash\n[root@centos8 ~]#alias rm=\"echo 请使用mv\"\n```\n\n范例：删除特殊文件\n\n```bash\n[root@centos8 data]#rm ./-f\n[root@centos8 data]#rm /data/-f\n[root@centos8 data]#touch '~'\n[root@centos8 data]#ls\n'~'\n[root@centos8 data]#rm -f ~\nrm: cannot remove '/root': Is a directory\n[root@centos8 data]#rm -- ~\nrm: cannot remove '/root': Is a directory\n[root@centos8 data]#rm -f ./~\n```\n\nrm 虽然删除了文件，但是被删除的文件仍然可能被恢复，在安全要求较高的场景下，可以使用shred安\n\n全删除文件\n\n### **目录操作**\n\n**显示目录树** **tree**\n\n常见选项：\n\n-d: 只显示目录\n\n-L level：指定显示的层级数目\n\n-P pattern: 只显示由指定wild-card pattern匹配到的路径\n\n**创建目录** **mkdir**\n\n常见选项：\n\n-p: 存在于不报错，且可自动创建所需的各目录\n\n-v: 显示详细信息\n\n-m MODE: 创建目录时直接指定权限\n\n**删除空目录** **rmdir**\n\n常见选项：\n\n-p 递归删除父空目录\n\n-v 显示详细信息\n\n注意：rmdir只能删除空目录，如果想删除非空目录，可以使用rm -r 命令，递归删除目录树\n\n范例\n\n```bash\nalias rm='DIR=/data/backup`date +%F%T`;mkdir $DIR;mv -t $DIR'\n```\n\n练习\n\n(1) 如何创建/testdir/dir1/x, /testdir/dir1/y, /testdir/dir1/x/a, /testdir/dir1/x/b, /testdir/dir1/y/a, /testdir/dir1/y/b\n\n```bash\nmkdir -p /testdir/dir1/{x,y}/{a,b}\n[root@192 ~]# ll /testdir/dir1/{x,y}\n/testdir/dir1/x:\ntotal 8\ndrwxr-xr-x 2 root root 4096 Jul  2 15:08 a\ndrwxr-xr-x 2 root root 4096 Jul  2 15:08 b\n\n/testdir/dir1/y:\ntotal 8\ndrwxr-xr-x 2 root root 4096 Jul  2 15:08 a\ndrwxr-xr-x 2 root root 4096 Jul  2 15:08 b\n[root@192 ~]#\n\n```\n\n(2) 如何创建/testdir/dir2/x, /testdir/dir2/y, /testdir/dir2/x/a, /testdir/dir2/x/b\n\n```bash\n[root@192 ~]# mkdir -p /testdir/dir2/{x,y} /testdir/dir2/x/{a,b}\n[root@192 ~]# ll /testdir/dir2/{x,y}\n/testdir/dir2/x:\ntotal 8\ndrwxr-xr-x 2 root root 4096 Jul  2 15:09 a\ndrwxr-xr-x 2 root root 4096 Jul  2 15:09 b\n\n/testdir/dir2/y:\ntotal 0\n```\n\n(3) 如何创建/testdir/dir3, /testdir/dir4, /testdir/dir5, /testdir/dir5/dir6, /testdir/dir5/dir7\n\n```bash\n[root@192 ~]# mkdir -p /testdir/dir{3,4,5} /testdir/dir5/dir{6,7}\n[root@192 ~]# ll /testdir/dir{3,4,5}\n/testdir/dir3:\ntotal 0\n\n/testdir/dir4:\ntotal 0\n\n/testdir/dir5:\ntotal 8\ndrwxr-xr-x 2 root root 4096 Jul  2 15:11 dir6\ndrwxr-xr-x 2 root root 4096 Jul  2 15:11 dir7\n[root@192 ~]#\n```\n\n## **文件元数据和节点表结构**\n\n### **inode** **表结构**\n\n据是存放在inode（index node）表中。inode 表中有很多条记录组成，第一条记录对应的存放了一个\n\n文件的元数据信息\n\n每一个inode表记录对应的保存了以下信息：\n\n```bash\ninode number 节点号\n文件类型\n权限\nUID\nGID\n链接数（指向这个文件名路径名称个数）\n该文件的大小和不同的时间戳\n指向磁盘上文件的数据块指针\n有关文件的其他数据\n```\n\n![image-20250702154244938](%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%92%8CIO%E9%87%8D%E5%AE%9A%E5%90%91.assets/image-20250702154244938.png)\n\n\n\n**目录**\n\n目录是个特殊文件，目录文件的内容保存了此目录中文件的列表及inode number对应关系\n\n文件引用一个是 inode号\n\n人是通过文件名来引用一个文件\n\n一个目录是目录下的文件名和文件inode号之间的映射\n\n**inode表和目录**\n\n![image-20250702155212719](%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%92%8CIO%E9%87%8D%E5%AE%9A%E5%90%91.assets/image-20250702155212719.png)\n\n**cp和inode**\n\ncp 命令：\n\n  分配一个空闲的inode号，在inode表中生成新条目\n\n  在目录中创建一个目录项，将名称与inode编号关联\n\n  拷贝数据生成新的文件\n\n**rm和inode**\n\nrm 命令：\n\n  链接数递减，从而释放的inode号可以被重用\n\n  把数据块放在空闲列表中\n\n  删除目录项\n\n  数据实际上不会马上被删除，但当另一个文件使用数据块时将被覆盖\n\n**mv和inode**\n\n  如果mv命令的目标和源在相同的文件系统，作为mv 命令\n\n​    用新的文件名创建对应新的目录项\n\n​    删除旧目录条目对应的旧的文件名\n\n​    不影响inode表（除时间戳）或磁盘上的数据位置：没有数据被移动！\n\n  如果目标和源在一个不同的文件系统， mv相当于cp和rm\n\n范例:\n\n```bash\n[root@centos8 ~]#df -i /boot\nFilesystem   Inodes IUsed IFree IUse% Mounted on\n/dev/sda1    65536  310 65226  1% /boot\n[root@centos8 ~]#mkdir /boot/test\n[root@centos8 ~]#touch /boot/test/file{1..65226}\n[root@centos8 ~]#touch /boot/test/new.txt\ntouch: cannot touch 'new.txt': No space left on device\n[root@centos8 ~]#df /boot\nFilesystem   1K-blocks  Used Available Use% Mounted on\n/dev/sda1     999320 133800  796708 15% /boot\n[root@centos8 ~]#df -i /boot\nFilesystem   Inodes IUsed IFree IUse% Mounted on\n/dev/sda1    65536 65536   0 100% /boot\n```\n\n范例：删除大文件\n\n```bash\n[root@centos8 ~]#cat /dev/null > /var/log/huge.log\n```\n\n### 硬（hard）链接\n\n硬链接本质上就给一个文件起一个新的名称，实质是同一个文件\n\n硬链接特性\n\n```bash\n创建硬链接会在对应的目录中增加额外的记录项以引用文件\n对应于同一文件系统上一个物理文件\n每个目录引用相同的inode号\n创建时链接数递增\n删除文件时：rm命令递减计数的链接，文件要存在，至少有一个链接数，当链接数为零时，该文件被删除\n不能跨越驱动器或分区\n不支持对目录创建硬链接\n```\n\n格式:\n\n```bash\nln filename [linkname ]\n```\n\n### 符号 symbolic （或软 soft）链接\n\n一个符号链接指向另一个文件,就像 windows 中快捷方式，软链接文件和原文件本质上不是同一个文件\n\n软链接特点\n\n```bash\n一个符号链接的内容是它引用文件的名称\n可以对目录创建软链接\n可以跨分区的文件实现\n指向的是另一个文件的路径；其大小为指向的路径字符串的长度；不增加或减少目标文件inode的引用计数\n在创建软链接时, 如果源文件使用相对路径，是相对于软链接文件的路径，而非相对于当前工作目录,但是软链接的路径如果是相对路径,则是相对于当前工作目录\n```\n\n格式：\n\n```bash\nln -s filename [linkname]\n```\n\n范例: 查看软链接\n\n```bash\n[root@ubuntu1804 ~]#ll /bin/sh\nlrwxrwxrwx 1 root root 4 Nov 1 02:16 /bin/sh -> dash*\nroot@ubuntu2004:~# ll /bin/sh\nlrwxrwxrwx 1 root root 4 Apr 23 2020 /bin/sh -> dash*\n[root@centos8 ~]#ll /bin/sh\nlrwxrwxrwx. 1 root root 4 Jul 22 2020 /bin/sh -> bash\n[root@centos7 ~]#ll /bin/sh\nlrwxrwxrwx. 1 root root 4 Mar 14 10:46 /bin/sh -> bash\n```\n\n范例:\n\n```bash\n#绝对路径\nln -s /data/dir /data/dirlink\n#相对路径\ncd /data\nln -s ../data/dir /root/dirlink\n#查看链接文件指向的原文件\nreadlink /data/dirlink\n[root@centos8 ~]#readlink /proc/$$/exe\n/usr/bin/bash\n```\n\n范例: 删除软链接时姿势不对造成的生产事故\n\n```bash\nm -rf /data/dirlink  #只删除软链接本身,不会删除源目录内容\nrm -rf /data/dirlink/  #删除源目录的文件,但不会删除链接文件,此方法非常危险\n#注意: 删除此软链接务必不要加-r选项\n```\n\n### 🌟**硬链接和软链接区别总结**\n\n```bash\n1. 本质：\n  硬链接：本质是同一个文件\n\t软链接：本质不是同一个文件\n2. 跨设备\n\t硬链接：不支持\n\t软链接：支持\n3. inode\n\t硬链接：相同\n\t软链接：不同\n4. 链接数\n\t硬链接：创建新的硬链接,链接数会增加,删除硬链接,链接数减少\n\t软链接：创建或删除,链接数不会变化\n5. 文件夹\n\t硬链接：不支持\n\t软链接：支持\n6. 相对路径\n\t硬链接：原始文件相对路径是相对于当前工作目录\n\t软链接：原始文件的相对路径是相对于链接文件的相对路径\n7. 删除源文件\n\t硬链接：只是链接数减一,但链接文件的访问不受影响\n\t软链接：链接文件将无法访问\n8. 文件类型\n\t硬链接：和源文件相同\n\t软链接：链接文件,和源文件无关\n9. 文件大小\n\t硬链接: 和源文件相同\n\t软链接: 源文件的路径的长度\n```\n\n### 生产案例\n\n**案例1：提示空间满 No space left on device，但 df 可以看到空间很多，为什么？**\n\n假设你有一个文件系统，其总inode数为`4194304`个。当前已经使用了`60830`个inode，剩余可用的inode数量为`4133474`个。你尝试创建大量文件，直到inode耗尽。\n\n```bash\n[root@192 ~]# df\nFilesystem                 1K-blocks    Used Available Use% Mounted on\n/dev/mapper/openeuler-root  65617452 2570440  59681332   5% /\n[root@192 ~]# df -i\nFilesystem                  Inodes IUsed   IFree IUse% Mounted on\n/dev/mapper/openeuler-root 4194304 60830 4133474    2% /\n```\n\n`创建大量文件耗尽inode`\n\n假设你使用以下命令创建了大量文件：\n\n```bash\nfor i in {1..4100000}; do touch /test/f$i; done\n```\n\n**中间状态**\n\n在创建过程中，inode逐渐被耗尽。假设你创建了大约3500000个文件后，inode使用情况如下：\n\n```bash\n[root@192 ~]# df -i\nFilesystem                  Inodes  IUsed   IFree IUse% Mounted on\n/dev/mapper/openeuler-root 4194304 3560830  633474   85% /\n```\n\n**创建更多文件直到inode耗尽**\n\n继续创建文件，直到inode耗尽：\n\n```bash\nfor i in {3500001..4100000}; do touch /test/f$i; done\n```\n\n**最终状态**\n\n当inode耗尽后，此时，`df`和`df -i`的输出可能如下：\n\n```bash\n[root@192 ~]# df -i\nFilesystem                  Inodes  IUsed   IFree IUse% Mounted on\n/dev/mapper/openeuler-root 4194304 4194303      1  100% /\n[root@192 ~]# df\nFilesystem                 1K-blocks    Used Available Use% Mounted on\n/dev/mapper/openeuler-root  65617452 2570440  59681332   5% /\n```\n\n此时，`IUsed`达到了4194303，`IFree`只剩下1，`IUse%`达到了100%。\n\n`/dev/mapper/openeuler-root`的磁盘空间使用率仅为5%，还有大量的空间可用。\n\n**尝试创建新文件**\n\n此时，你尝试创建一个新文件：`touch /test/newfile`\n\n你会收到以下错误：\n\n```\ntouch: cannot touch '/test/newfile': No space left on device\n```\n\n> 结论：为什么会出现“`No space left on device`”？\n>\n> 尽管磁盘空间充足，但inode已经耗尽。每个文件和目录都需要一个inode来存储其元数据。当inode耗尽时，即使磁盘空间还有剩余，也无法创建新的文件或目录。因此，当你尝试创建新文件时，系统会报出“`No space left on device`”的错误。\n\n\n\n案例2：提示空间快满，使用 rm 删除了很大的无用文件后，df仍然看到空间不足，为什么？如何解决？\n\n复现过程\n\n**查看df状态** 利用率5%\n\n```bash\n[root@192 ~]# df -h\nFilesystem                  Size  Used Avail Use% Mounted on\n/dev/mapper/openeuler-root   63G  2.5G   57G   5% /\n```\n\n**创建一个大文件**\n\n```bash\n[root@192 ~]# dd if=/dev/zero of=/bigfile bs=1G count=1\n1+0 records in\n1+0 records out\n1073741824 bytes (1.1 GB, 1.0 GiB) copied, 0.622914 s, 1.7 GB/s\n```\n\n**查看磁盘空间使用情况** 利用率6%\n\n```bash\n[root@192 ~]# df -h\nFilesystem                  Size  Used Avail Use% Mounted on\n/dev/mapper/openeuler-root   63G  3.5G   56G   6% /\n```\n\n这时候复制一个窗口，vim进去\n\n![image-20250702163044341](%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%92%8CIO%E9%87%8D%E5%AE%9A%E5%90%91.assets/image-20250702163044341.png)\n\n```bash\n#查看文件是否占用\n[root@192 ~]# lsof | grep bigfile\nvim       53885                          root   4u      REG              253,0     4096         13 /.bigfile.swp\n#删除占用的进程\nkill -9 53885\n#当执行删除的时候，其他人正在占用的vim窗口就会强制退出，并且释放空间\n```\n\n![image-20250702163336464](%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%92%8CIO%E9%87%8D%E5%AE%9A%E5%90%91.assets/image-20250702163336464.png)\n\n使用`rm`删除了很大的无用文件后，`df`仍然看到空间不足”的情况。原因是文件被某个进程占用，导致磁盘空间没有立即释放。通过查找并关闭占用文件的进程，可以解决这个问题。\n\n\n\n## **IO** **重定向和管道**\n\n### **标准输入和输出**\n\n程序：指令+数据\n\n读入数据：Input\n\n输出数据：Output\n\n打开的文件都有一个fd: file descriptor (文件描述符)\n\nLinux给程序提供三种 I/O 设备\n\n  标准输入（STDIN） －0 默认接受来自终端窗口的输入\n\n  标准输出（STDOUT）－1 默认输出到终端窗口\n\n  标准错误（STDERR） －2 默认输出到终端窗口\n\n范例：文件描述符\n\n```bash\n[root@centos8 ~]#ll /dev/std*\nlrwxrwxrwx. 1 root root 15 Dec 16 08:56 /dev/stderr -> /proc/self/fd/2\nlrwxrwxrwx. 1 root root 15 Dec 16 08:56 /dev/stdin -> /proc/self/fd/0\nlrwxrwxrwx. 1 root root 15 Dec 16 08:56 /dev/stdout -> /proc/self/fd/1\n[root@centos8 ~]#ll /proc/self/fd/*\nls: cannot access '/proc/self/fd/255': No such file or directory\nlrwx------. 1 root root 64 Dec 16 10:59 /proc/self/fd/0 -> /dev/pts/0\nlrwx------. 1 root root 64 Dec 16 10:59 /proc/self/fd/1 -> /dev/pts/0\nlrwx------. 1 root root 64 Dec 16 10:59 /proc/self/fd/2 -> /dev/pts/0\nlr-x------. 1 root root 64 Dec 16 10:59 /proc/self/fd/3 -> \n/var/lib/sss/mc/passwd\nlrwx------. 1 root root 64 Dec 16 10:59 /proc/self/fd/4 -> 'socket:[66542]'\nlr-x------. 1 root root 64 Dec 16 10:59 /proc/self/fd/5 -> /var/lib/sss/mc/group\n[root@centos8 ~]#ll /proc/`pidof tail`/fd\ntotal 0\nlrwx------. 1 root root 64 Dec 16 10:56 0 -> /dev/pts/1\nlrwx------. 1 root root 64 Dec 16 10:56 1 -> /dev/pts/1\nlrwx------. 1 root root 64 Dec 16 10:56 2 -> /dev/pts/1\nlr-x------. 1 root root 64 Dec 16 10:56 3 -> /var/log/messages\nlr-x------. 1 root root 64 Dec 16 10:56 4 -> anon_inode:inotify\n```\n\n范例: 文件描述符\n\n```bash\n[root@centos8 ~]#cat test.txt\nhello\n[root@centos8 ~]#cat file.py\nimport time\nf = open('test.txt','r')\ntime.sleep(1000)\n[root@centos8 ~]#python3 file.py\n[root@centos8 ~]#ll /proc/`pidof python3`/fd\ntotal 0\nlrwx------ 1 root root 64 Apr 6 18:13 0 -> /dev/pts/0\nlrwx------ 1 root root 64 Apr 6 18:13 1 -> /dev/pts/0\nlrwx------ 1 root root 64 Apr 6 18:13 2 -> /dev/pts/0\nlr-x------ 1 root root 64 Apr 6 18:13 3 -> /root/test.txt\n```\n\n### I/O重定向redirect\n\nI/O重定向：将默认的输入，输出或错误对应的设备改变，指向新的目标\n\n#### **标准输出和错误重新定向**\n\nSTDOUT和STDERR可以被重定向到指定文件,而非默认的当前终端\n\n格式\n\n```bash\n命令 操作符号 文件名\n```\n\n**支持的操作符号包括**\n\n```bash\n1> 或 >   把STDOUT重定向到文件\n2> 把STDERR重定向到文件\n&> 把标准输出和错误都重定向\n>& 和上面功能一样，建议使用上面方式\n```\n\n以上如果文件已存在，文件内容会被覆盖\n\n**追加**\n\n`>>` 可以在原有内容基础上，追加内容\n\n把输出和错误重新定向追加到文件\n\n```bash\n>> 追加标准输出重定向至文件\n2>> 追加标准错误重定向至文件\n```\n\n**标准输出和错误输出各自定向至不同位置**\n\n```bash\nCOMMAND > /path/to/file.out 2> /path/to/error.out\n```\n\n**合并标准输出和错误输出为同一个数据流进行重定向**\n\n```bash\n&>  覆盖重定向\n&>> 追加重定向\nCOMMAND > /path/to/file.out 2>&1 （顺序很重要）\nCOMMAND >> /path/to/file.out 2>&1\n```\n\n\n\n**合并多个程序**\n\n (CMD1;CMD2......) 或者{ CMD1;CMD2;....; }合并多个程序的STDOUT\n\n范例：\n\n```bash\n[root@centos8 ~]#ls 1> /dev/pts/1\n[root@centos8 ~]#ls /data > /dev/pts/1\n```\n\n范例：标准错误重定向\n\n```bash\n[root@centos8 ~]#rm /data/f1.log 2> /data/all.log\n```\n\n范例：合并多个命令的结果至一个文件中\n\n```bash\n[root@centos8 ~]#( cal 2019 ; cal 2020 ) > all.txt\n[root@centos8 ~]#{ ls;hostname;} > /data/all.log\n```\n\n范例：清除大文件\n\n```bash\n#通用\ncat /dev/null > /data/file.log\n#依赖于shell类型,不通用\n> /data/file.log\n```\n\n范例：分别重定向\n\n```bash\n[root@centos8 ~]#ls /data/ /xxx > stdout.log 2> stderr.log\n```\n\n范例：将标准输出和错误都重定向到同一个文件\n\n```bash\n[root@centos8 ~]#ls /data /xxx > /data/all.log 2>&1\n[root@centos8 ~]#ls /data /xxx 2> /data/all.log 1>&2\n[root@centos8 ~]#ls /data /xxx &> /data/all.log \n[root@centos8 ~]#ls /data /xxx >& /data/all.log \n[root@centos8 ~]#ls /data /xxx 2>&1 > /data/all.log\n```\n\n- **前四条命令**：\n  - 都是先处理标准输出或标准错误的重定向，然后再处理另一个流的重定向。\n  - 例如，`ls /data /xxx > /data/all.log 2>&1`先将标准输出重定向到文件，再将标准错误重定向到标准输出。\n- **第五条命令**：\n  - `ls /data /xxx 2>&1 > /data/all.log`先将标准错误重定向到标准输出，然后再将标准输出重定向到文件。\n  - 这种顺序在某些情况下可能会导致不同的行为，尤其是在更复杂的命令中。但在这个特定的例子中，最终结果是相同的。\n\n\n\n范例\n\n```bash\n[root@centos8 ~]#man bash > bash.txt\n[root@centos8 ~]#wc -l bash.txt\n3821 bash.txt\n```\n\n范例\n\n```bash\n[root@192 ~]# passwd wang\npasswd: Unknown user name 'wang'.\n[root@192 ~]# passwd wang &> /dev/null\n[root@192 ~]#\n```\n\n\n\n范例: 实现标准输出和错误的互换\n\n```bash\n[root@centos8 ~]#ls f1.txt f2.txt\nls: cannot access 'f1.txt': No such file or directory\nls: cannot access 'f2.txt': No such file or directory\n[root@centos8 ~]#( cat /etc/centos-release /etc/xxx 3>&1 1>&2 2>&3 ) > f1.txt \n2> f2.txt\n[root@centos8 ~]#cat f1.txt \ncat: /etc/xxx: No such file or directory\n[root@centos8 ~]#cat f2.txt \nCentOS Linux release 8.2.2004 (Core)\n```\n\n#### **标准输入重定向**\n\n从文件中导入STDIN，代替当前终端的输入设备，使用 < 来重定向标准输入\n\n某些命令能够接受从文件中导入的STDIN\n\n##### **tr** **命令**\n\ntr 转换和删除字符\n\n```bash\ntr [OPTION]... SET1 [SET2]\n```\n\n```bash\n-d --delete：删除所有属于第一字符集的字符\n-s --squeeze-repeats：把连续重复的字符以单独一个字符表示,即去重\n-t --truncate-set1：将第一个字符集对应字符转化为第二字符集对应的字符\n-c –C --complement：取字符集的补集\n \\NNN      character with octal value NNN (1 to 3 octal digits)\n \\\\       backslash\n \\a       audible BEL\n \\b       backspace\n \\f       form feed\n \\n       new line\n \\r       return\n \\t       horizontal tab\n \\v       vertical tab\n[:alnum:]：字母和数字\n[:alpha:]：字母\n[:digit:]：数字\n[:lower:]：小写字母\n[:upper:]：大写字母\n[:space:]：空白字符\n[:print:]：可打印字符\n[:punct:]：标点符号\n[:graph:]：图形字符\n[:cntrl:]：控制（非打印）字符\n[:xdigit:]：十六进制字符\n```\n\n范例：\n\n```bash\n#该命令会把/etc/issue中的小写字符都转换成大写字符\n[root@192 ~]# cat /etc/issue\nAuthorized users only. All activities may be monitored and reported.\n\n[root@192 ~]# tr a-z A-Z< /etc/issue\nAUTHORIZED USERS ONLY. ALL ACTIVITIES MAY BE MONITORED AND REPORTED.\n[root@192 ~]#\n\n#删除fstab文件中的所有abc中任意字符\n[root@192 ~]# echo \"acvsfasdfSDFD21343243\" > 1.txt\n[root@192 ~]# cat 1.txt\nacvsfasdfSDFD21343243\n[root@192 ~]# tr -d abc < 1.txt\nvsfsdfSDFD21343243\n[root@192 ~]#\n```\n\n\n\n范例：将所有的连续空格替换成一个空格或别的符号\n\n```bash\n[root@192 ~]# df -h\nFilesystem                  Size  Used Avail Use% Mounted on\n/dev/mapper/openeuler-root   63G  2.5G   57G   5% /\ndevtmpfs                    4.0M     0  4.0M   0% /dev\ntmpfs                       1.7G     0  1.7G   0% /dev/shm\ntmpfs                       4.0M     0  4.0M   0% /sys/fs/cgroup\ntmpfs                       675M  9.1M  666M   2% /run\ntmpfs                       1.7G     0  1.7G   0% /tmp\n/dev/sda2                   974M  213M  694M  24% /boot\n/dev/mapper/openeuler-home   31G   24K   29G   1% /home\n[root@192 ~]# df -h > df.log\n[root@192 ~]# tr -s ' ' < df.log\nFilesystem Size Used Avail Use% Mounted on\n/dev/mapper/openeuler-root 63G 2.5G 57G 5% /\ndevtmpfs 4.0M 0 4.0M 0% /dev\ntmpfs 1.7G 0 1.7G 0% /dev/shm\ntmpfs 4.0M 0 4.0M 0% /sys/fs/cgroup\ntmpfs 675M 9.1M 666M 2% /run\ntmpfs 1.7G 0 1.7G 0% /tmp\n/dev/sda2 974M 213M 694M 24% /boot\n/dev/mapper/openeuler-home 31G 24K 29G 1% /home\n[root@192 ~]# tr -s ' ' : < df.log\nFilesystem:Size:Used:Avail:Use%:Mounted:on\n/dev/mapper/openeuler-root:63G:2.5G:57G:5%:/\ndevtmpfs:4.0M:0:4.0M:0%:/dev\ntmpfs:1.7G:0:1.7G:0%:/dev/shm\ntmpfs:4.0M:0:4.0M:0%:/sys/fs/cgroup\ntmpfs:675M:9.1M:666M:2%:/run\ntmpfs:1.7G:0:1.7G:0%:/tmp\n/dev/sda2:974M:213M:694M:24%:/boot\n/dev/mapper/openeuler-home:31G:24K:29G:1%:/home\n```\n\n##### **标准输入重定向**\n\n实现标准输入重定向的符号\n\n```bash\nCOMMAND 0< FILE\nCOMMAND < FILE\n```\n\n比如\n\n```bash\ncat > file\nmage\nwangxiaochun\n```\n\n按ctrl+d离开，可以使用文件来代替键盘的输入\n\n```bash\ncat < file1 > file2 \ncat < file1 >> file1\n```\n\n范例：\n\n```bash\n[root@centos8 ~]#echo 2^3 > bc.log\n[root@centos8 ~]#cat bc.log\n2^3\n[root@centos8 ~]#bc < bc.log\n8\n[root@centos8 ~]#cat < mail.txt\nhello\nhow old are you\n[root@centos8 ~]#cat mail.txt\nhello\nhow old are you\n[root@centos8 ~]#cat < mail.txt > mail2.txt\n[root@centos8 ~]#cat mail2.txt\nhello\nhow old are you\n[root@centos8 ~]#cat mail.txt \nhello\nhow old are you\n[root@centos8 ~]#mail -s test2 wang < mail.txt\n[root@centos8 ~]#cat > cat.log\nline1\nline2\nline3\n```\n\n##### **把多行重定向**\n\n使用 \"<<终止词\" 命令从键盘把多行重导向给STDIN，直到终止词位置之前的所有文本都发送给\nSTDIN，有时被称为就地文本（here documents）\n其中终止词可以是任何一个或多个符号，比如：!，@，$，EOF（End Of File），magedu等，其中EOF\n比较常用\n\n```bash\ncat > 1.txt <<\"EOF\"\n213123\n123213\n41324324\nEOF\n```\n\n\n\n##### **高级重定向写法**\n\n`cmd <<< \"string\"`\n\n含义是 here-string ，表示传给给cmd的stdin的内容从这里开始是一个字符串。\n\n范例：\n\n```bash\n[root@rocky8 ~]#tr 'a-z' 'A-Z' <<<\"I am wang\"\nI AM WANG\n```\n\n`cmd1 < <(cmd2)`\n\n名称为 Process substitution ,是由两个部分组成\n\n`<(cmd2)` 表示把cmd2的输出写入一个临时文件, 注意：`<`和`（`之间`无空格`\n\n`cmd1 < 这是一个标准的stdin重定向`\n\n把两个合起来，就是把cmd2的输出stdout传递给cmd1作为输入stdin, 中间通过临时文件做传递\n\n```bash\n[root@rocky8 ~]#tr 'a-z' 'A-Z' < <(echo I am wang)\nI AM WANG\n[root@192 ~]# ll <(echo whoami)\nlr-x------ 1 root root 64 Jul  2 16:53 /dev/fd/63 -> 'pipe:[99822]'\n```\n\n### **管道**\n\n#### **管道**\n\n管道（使用符号“`|`”表示）用来连接多个命令\n\n格式\n\n```bash\n命令1 | 命令2 | 命令3 | …\n```\n\n功能说明：\n\n  将命令1的STDOUT发送给命令2的STDIN，命令2的STDOUT发送到命令3的STDIN\n\n  所有命令会在当前shell进程的子shell进程中执行\n\n  组合多种工具的功能\n\n注意：STDERR默认不能通过管道转发，可利用2>&1 或 |& 实现，格式如下\n\n```bash\n命令1 2>&1 | 命令2 \n命令1 |& 命令2\n```\n\n范例\n\n```bash\n[root@192 ~]# df -h > df.log\n[root@192 ~]# tr -s ' ' < df.log\nFilesystem Size Used Avail Use% Mounted on\n/dev/mapper/openeuler-root 63G 2.5G 57G 5% /\ndevtmpfs 4.0M 0 4.0M 0% /dev\ntmpfs 1.7G 0 1.7G 0% /dev/shm\ntmpfs 4.0M 0 4.0M 0% /sys/fs/cgroup\ntmpfs 675M 9.1M 666M 2% /run\ntmpfs 1.7G 0 1.7G 0% /tmp\n/dev/sda2 974M 213M 694M 24% /boot\n/dev/mapper/openeuler-home 31G 24K 29G 1% /home\n[root@192 ~]# df -h| tr -s ' '\nFilesystem Size Used Avail Use% Mounted on\n/dev/mapper/openeuler-root 63G 2.5G 57G 5% /\ndevtmpfs 4.0M 0 4.0M 0% /dev\ntmpfs 1.7G 0 1.7G 0% /dev/shm\ntmpfs 4.0M 0 4.0M 0% /sys/fs/cgroup\ntmpfs 675M 9.1M 666M 2% /run\ntmpfs 1.7G 0 1.7G 0% /tmp\n/dev/sda2 974M 213M 694M 24% /boot\n/dev/mapper/openeuler-home 31G 24K 29G 1% /home\n\n```\n\n范例：\n\n```bash\n[root@centos8 ~]#ls /data /xxx | tr 'a-z' 'A-Z'\nls: cannot access '/xxx': No such file or directory\n/DATA:\nALL.LOG\nF1.TXT\nPASSWD.LOG\nSTERR.LOG\nSTOUT.LOG\nTEST.LOG\nTOUCH.LOG\n[root@centos8 ~]#ls /data /xxx 2>&1 | tr 'a-z' 'A-Z'\nLS: CANNOT ACCESS '/XXX': NO SUCH FILE OR DIRECTORY\n/DATA:\nALL.LOG\nF1.TXT\nPASSWD.LOG\nSTERR.LOG\nSTOUT.LOG\nTEST.LOG\nTOUCH.LOG\n[root@centos8 ~]#ls /data /xxx |& tr 'a-z' 'A-Z'\nLS: CANNOT ACCESS '/XXX': NO SUCH FILE OR DIRECTORY\n/DATA:\nALL.LOG\nF1.TXT\nPASSWD.LOG\nSTERR.LOG\nSTOUT.LOG\nTEST.LOG\nTOUCH.LOG\n```\n\n范例：\n\n```bash\n[root@192 ~]# useradd wang\n[root@192 ~]# passwd --stdin wang\nChanging password for user wang.\n123456  #这里输入密码（手动）\npasswd: all authentication tokens updated successfully.\n\n#设置密码文件\n[root@192 ~]# cat > pass.txt<< \"EOF\"\n123456\nEOF\n#用文件的密码传入进行修改密码\n[root@192 ~]# passwd --stdin wang < pass.txt\nChanging password for user wang.\npasswd: all authentication tokens updated successfully.\n[root@192 ~]# cat pass.txt | passwd --stdin wang\nChanging password for user wang.\npasswd: all authentication tokens updated successfully.\n\n#明文密码\n[root@192 ~]# echo 123456 | passwd --stdin wang\nChanging password for user wang.\npasswd: all authentication tokens updated successfully.\n[root@192 ~]# echo 123456 | passwd --stdin wang &>/dev/null\n[root@192 ~]#\n\n```\n\n\n\n范例：\n\n```bash\n#转换为大写字母\nls | tr ‘a-z’ ‘A-Z’\n#less实现分页地查看输入\nls -l /etc | less\n#mail通过电子邮件发送输入\necho \"test email\" | mail -s \"test\" wang@example.com\n#算术运算\necho \"2^3\" |bc\n```\n\n范例:\n\n```bash\n[root@rocky8 ~]#ls --help | grep size\n#有此命令的帮助信是是标准错误\n[root@rocky8 ~]#mysqldump --help |& grep master-data\n```\n\n\n\n#### **tee** **命令**\n\n利用 tee 命令可以重定向到多个目标，经常配合管道符一起使用\n\n格式\n\n```bash\n命令1 | tee [-a ] 文件名 | 命令2\n```\n\n以上可以把命令1的STDOUT保存在文件中，做为命令2的输入\n\n选项：\n\n```bash\n-a 追加\n```\n\n功能：\n\n  保存不同阶段的输出\n\n  复杂管道的故障排除\n\n  同时查看和记录输出\n\n范例\n\n```bash\n[root@centos8 ~]#echo {1..100}|tr ' ' +|bc\n5050\n[root@centos8 ~]#echo {1..100..2} | tr ' ' + | bc \n2500\n[root@centos8 ~]#seq -s + 1 100 |bc\n5050\n[root@centos8 ~]#seq -s+ 1 2 100 | bc\n2500\n```\n\n范例：\n\n```bash\ncat <<EOF | tee 2.txt\nwelcome to magedu\nhappy new year\nEOF\n```\n\n```bash\n[root@192 ~]# cat <<EOF | tee 2.txt\nwelcome to magedu\nhappy new year\nEOF\nwelcome to magedu\nhappy new year\n[root@192 ~]#\n```\n\n范例\n\n```bash\n[root@192 ~]# tee 3.txt >/dev/null <<\"EOF\"\nwelcome to magedu\nhappy new year\nwelcome to magedu\nhappy new year\nwelcome to magedu\nhappy new year\nEOF\n[root@192 ~]# cat 3.txt\nwelcome to magedu\nhappy new year\nwelcome to magedu\nhappy new year\nwelcome to magedu\nhappy new year\n[root@192 ~]#\n```\n\n<div class=\"tbsm\" style=\"margin-top:54px;\">\n<div class=\"tbsm-top\"><span><svg t=\"1674654360507\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"987\" data-spm-anchor-id=\"a313x.7781069.0.i0\" width=\"35\" height=\"35\"><path d=\"M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z\" fill=\"#66EEFF\" p-id=\"988\"></path><path d=\"M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z\" fill=\"#C2F8FF\" p-id=\"989\"></path></svg></span><span style=\"font-size:30px;\"> 特别声明</span></div>\n<div class=\"tbsm-wz\">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div>\n</div>\n\n\n\n","tags":["运维笔记"],"categories":["运维"]},{"title":"用户、组和权限","url":"/posts/bca3897f/","content":"\n<meta name=\"referrer\" content=\"no-referrer\"/>\n\n# 用户、组和权限\n\n**内容概述**\n\n**Linux的安全模型**\n\n**用户和组相关文件**\n\n**用户和组管理命令**\n\n**理解并设置文件权限**\n\n**默认权限**\n\n**特殊权限**\n\n**文件访问控制列表**\n\n## Linux安全模型\n\n资源分派：\n\n- Authentication：认证，验证用户身份\n- Authorization：授权，不同的用户设置不同权限\n- Accouting|Audition：审计\n\n当用户登录成功时，系统会自动分配令牌 token，包括：用户标识和组成员等信息\n\n### **用户**\n\nLinux中每个用户是通过 User Id （UID）来唯一标识的\n\n- `管理员`：root, 0\n\n- `普通用户`：1-60000 自动分配\n\n  - 系统用户：1-499 （CentOS 6以前）, 1-999 （CentOS 7以后）\n\n     对守护进程获取资源进行权限分配\n\n  - 登录用户：500+ （CentOS6以前）, 1000+（CentOS7以后）\n\n     给用户进行交互式登录使用\n\n### **用户组**\n\nLinux中可以将一个或多个用户加入用户组中，用户组是通过Group ID（GID） 来唯一标识的。\n\n- 管理员组：root, 0\n\n- 普通组：\n\n  - 系统组：1-499（CentOS 6以前）, 1-999（CentOS7以后）, 对守护进程获取资源进行权限分配\n\n  - 普通组：500+（CentOS 6以前）, 1000+（CentOS7以后）, 给用户使用\n\n### **用户和组的关系**\n\n用户的主要组(primary group)：用户必须属于一个且只有一个主组，默认创建用户时会自动创建和用户名同名的组，做为用户的主要组，由于此组中只有一个用户，又称为私有组\n\n用户的附加组(supplementary group)： 一个用户可以属于零个或多个辅助组，附属组\n\n范例:\n\n```bash\n[root@centos8 ~]#id postfix\nuid=89(postfix) gid=89(postfix) groups=89(postfix),12(mail)\n```\n\n### **安全上下文**\n\nLinux安全上下文Context：运行中的程序，即进程 (process)，以进程发起者的身份运行，进程所能够访问资源的权限取决于进程的运行者的身份\n\n比如：分别以root 和wang 的身份运行 /bin/cat /etc/shadow ，得到的结果是不同的，资源能否能被访问，是由运行者的身份决定，非程序本身\n\n范例:\n\n```bash\n[wang@centos8 ~]$cat /etc/shadow\ncat: /etc/shadow: Permission denied\n[root@centos8 ~]#cat /etc/shadow\nroot:$6$zsrWEC56PrKifAEz$hylCuGySe.H6l6O2MRvbtqy/VZgnZbau.y57dE85.YHq03MTJVV4UvQ\nVIDcYA1IJzbgpWE0vTU.BtPHLbNBNn0:18246:0:99999:7:::\nbin:*:18027:0:99999:7:::\ndaemon:*:18027:0:99999:7:::\nadm:*:18027:0:99999:7:::\nlp:*:18027:0:99999:7:::\n```\n\n## **用户和组的配置文件**\n\n### **用户和组的主要配置文件**\n\n```bash\n/etc/passwd：用户及其属性信息(名称、UID、主组ID等）\n/etc/shadow：用户密码及其相关属性\n/etc/group：组及其属性信息\n/etc/gshadow：组密码及其相关属性\n```\n\n### passwd文件格式\n\n```bash\nlogin name：登录用名（wang）\npasswd：密码 (x)\nUID：用户身份编号 (1000)\nGID：登录默认所在组编号 (1000)\nGECOS：用户全名或注释\nhome directory：用户主目录 (/home/wang)\nshell：用户默认使用shell (/bin/bash)\n```\n\n### shadow文件格式\n\n```bash\n登录用名\n用户密码:一般用sha512加密\n从1970年1月1日起到密码最近一次被更改的时间\n密码再过几天可以被变更（0表示随时可被变更）\n密码再过几天必须被变更（99999表示永不过期）\n密码过期前几天系统提醒用户（默认为一周）\n密码过期几天后帐号会被锁定\n从1970年1月1日算起，多少天后帐号失效\n```\n\n更改密码加密算法：\n\n```bash\nauthconfig  --passalgo=sha256 --update\n```\n\n密码的安全策略\n\n- 足够长\n- 使用数字、大写字母、小写字母及特殊字符中至少3种\n- 使用随机密码\n- 定期更换,不要使用最近曾经使用过的密码\n\n范例：生成随机密码\n\n[:alnum:] ：任意数字或字母\n\n```bash\n[root@centos8 ~]#tr -dc '[:alnum:]' < /dev/urandom | head -c 12\nsFg6C8g5FAfe\n[root@centos8 ~]#openssl rand -base64 9\nhvMkPmAyIrXMQInt\n#生成随机密码\n[root@centos8 ~]#yum -y install expect\n[root@centos8 ~]#mkpasswd -l 8 -c 2 -C 2 -d 2 -s 2 \n#生成随机密码恀网站：\nhttps://suijimimashengcheng.51240.com/\n```\n\n### group文件格式\n\n```bash\n群组名称：就是群组名称\n群组密码：通常不需要设定，密码是被记录在 /etc/gshadow \nGID：就是群组的 ID \n以当前组为附加组的用户列表(分隔符为逗号)\n```\n\n### gshdow文件格式\n\n```bash\n群组名称：就是群的名称\n群组密码：\n组管理员列表：组管理员的列表，更改组密码和成员\n以当前组为附加组的用户列表：多个用户间用逗号分隔\n```\n\n### **文件操作**\n\n```bash\nvipw和vigr\npwck和grpck\n```\n\n## **用户和组管理命令**\n\n```bash\n#用户管理命令\n  useradd\n  usermod\n  userdel\n#组帐号维护命令\n  groupadd\n  groupmod\n  groupdel\n```\n\n### **用户创建**\n\nuseradd 命令可以创建新的Linux用户\n\n格式：useradd [options] LOGIN\n\n选项：\n\n```bash\n-u UID \n-o 配合-u 选项，不检查UID的唯一性\n-g GID 指明用户所属基本组，可为组名，也可以GID\n-c \"COMMENT“ 用户的注释信息\n-d HOME_DIR 以指定的路径(不存在)为家目录\n-s SHELL 指明用户的默认shell程序，可用列表在/etc/shells文件中\n-G GROUP1[,GROUP2,...] 为用户指明附加组，组须事先存在\n-N 不创建私用组做主组，使用users组做主组\n-r 创建系统用户 CentOS 6之前: ID<500，CentOS7 以后: ID<1000\n-m 创建家目录，用于系统用户\n-M 不创建家目录，用于非系统用户\n-p 指定加密的密码\n```\n\n范例:\n\n```bash\nuseradd -r -u 48 -g apache -s /sbin/nologin -d /var/www -c \"Apache\" apache\n```\n\nuseradd 命令默认值设定由/etc/default/useradd定义\n\n```bash\n[root@centos8 ~]#cat /etc/default/useradd\n# useradd defaults file\nGROUP=100\nHOME=/home\nINACTIVE=-1  #对应/etc/shadow文件第7列，即用户密码过期后的帐号锁定的宽限期,-1表示不锁定\nEXPIRE=    #对应/etc/shadow文件第8列，即用户帐号的有效期\nSHELL=/bin/bash\nSKEL=/etc/skel #用于生成新建用户家目录的模版文件\nCREATE_MAIL_SPOOL=yes\n```\n\n显示或更改默认设置\n\n```bash\nuseradd -D \nuseradd –D -s SHELL\nuseradd –D –b BASE_DIR\nuseradd –D –g GROUP\n```\n\n新建用户的相关文件\n\n- /etc/default/useradd \n- /etc/skel/* \n- /etc/login.defs\n\n批量创建用户\n\n```bash\nnewusers passwd 格式文件 \n```\n\n批量修改用户口令\n\n```bash\necho username:passwd | chpasswd\n```\n\n范例: CentOS8 生成sha512加密密\n\n```bash\n[root@192 ~]# openssl passwd -6 123456\n$6$BDS.Zas72d3VXaZL$thfW6W6SrwfhlCoEh/o45G.icd.a.HY3q/mwxdIU.wOp2ELiRN5YPMwORAWNCYFdLU7b9rkxUEUFqV7aqJjOL/\n```\n\n范例: CentOS7 利用Python程序在 生成sha512加密密码\n\n```bash\n[root@centos7 ~]#python -c 'import \ncrypt,getpass;pw=\"magedu\";print(crypt.crypt(pw))'\n$6$pt0SFMf6YqKea3mh$.7Hkslg17uI.Wu7BcMJStVVtkzrwktXrOC8DxcMFC4JO1igrqR7VAi87H5PH\nOuLTUEjl7eJqKUhMT1e9ixojn1\n```\n\n### **用户属性修改**\n\nusermod 命令可以修改用户属性\n\n```bash\n#格式\nusermod [OPTION] login\n```\n\n常见选项：\n\n```bash\n-u UID: 新UID\n-g GID: 新主组\n-G GROUP1[,GROUP2,...[,GROUPN]]]：新附加组，原来的附加组将会被覆盖；若保留原有，则要同时使\n用-a选项\n-s SHELL：新的默认SHELL\n-c 'COMMENT'：新的注释信息\n-d HOME: 新家目录不会自动创建；若要创建新家目录并移动原家数据，同时使用-m选项\n-l login_name: 新的名字\n-L: lock指定用户,在/etc/shadow 密码栏的增加 ! \n-U: unlock指定用户,将 /etc/shadow 密码栏的 ! 拿掉\n-e YYYY-MM-DD: 指明用户账号过期日期\n-f INACTIVE: 设定非活动期限，即宽限期\n```\n\n### **删除用户**\n\nuserdel 可删除Linux 用户\n\n```bash\n#格式\nuserdel [OPTION]... Login\n```\n\n常见选项：\n\n```bash\n-f, --force  强制\n-r, --remove 删除用户家目录和邮箱\n```\n\n范例: 强制删除用户和数据\n\n```bash\n[root@centos8 ~]#useradd test\n[root@centos8 ~]#id test\nuid=1001(test) gid=1001(test) groups=1001(test)\n#在另一终端用test登录\n[root@centos8 ~]#su - test\n[test@centos8 ~]$\n#删除正在登录的用户失败\n[root@centos8 ~]#userdel -r test\nuserdel: user test is currently used by process 29909\n[root@centos8 ~]#id test\nuid=1001(test) gid=1001(test) groups=1001(test)\n#强制删除用户\n[root@centos8 ~]#userdel -rf test\nuserdel: user test is currently used by process 29909\n[root@centos8 ~]#id test\nid: ‘test’: no such user\n```\n\n### 查看用户相关的ID信息\n\nid 命令可以查看用户的UID，GID等信息\n\n格式：\n\n```bash\nid [OPTION]... [USER]\n```\n\n常见选项：\n\n```bash\n-u: 显示UID\n-g: 显示GID\n-G: 显示用户所属的组的ID\n-n: 显示名称，需配合ugG使用\n```\n\n### **切换用户或以其他用户身份执行命令**\n\nsu: 即 switch user，命令可以切换用户身份，并且以指定用户的身份执行命令\n\n格式：\n\n```bash\nsu [options...] [-] [user [args...]]\n```\n\n常见选项：\n\n```bash\n-l --login  su -l UserName  相当于 su - UserName\n-c, --command <command>     pass a single command to the shell with -c\n```\n\n切换用户的方式：\n\n- su UserName：非登录式切换，即不会读取目标用户的配置文件，不改变当前工作目录，即不完全切换\n- su `-` UserName：登录式切换，会读取目标用户的配置文件，切换至自已的家目录，即完全切换\n\n说明：root su至其他用户无须密码；非root用户切换时需要密码\n\n注意：su 切换新用户后，使用 `exit` 退回至旧的用户身份，而不要再用 su 切换至旧用户，否则会生成很多的bash子进程，环境可能会混乱。\n\n换个身份执行命令：\n\n```bash\nsu [-] UserName -c 'COMMAND'\n```\n\n范例：\n\n```bash\n[root@centos8 ~]#getent passwd mage\nmage:x:1001:1001::/home/mage:/bin/bash\n[root@centos8 ~]#usermod -s /bin/false mage\n[root@centos8 ~]#getent passwd mage\nmage:x:1001:1001::/home/mage:/bin/false\n[root@centos8 ~]#su - mage\nLast login: Fri Mar 27 09:18:57 CST 2020 on pts/0\n[root@centos8 ~]#whoami\nroot\n```\n\n范例：\n\n```bash\n[root@centos8 ~]#su -s /sbin/nologin wang\nThis account is currently not available.\n[root@centos8 ~]#whoami\nroot\n[root@centos8 ~]#su -s /bin/false wang\n[root@centos8 ~]#whoami\nroot\n```\n\n范例：\n\n```bash\n[wang@centos8 ~]$su - root -c \"getent shadow\"\n```\n\n范例：\n\n```bash\n[root@192 ~]# su - wang -c 'touch wang.txt'\n[root@192 ~]# ll /home/wang/\ntotal 0\n-rw-r--r-- 1 wang wang 0 Jul  2 17:49 wang.txt\n\n```\n\n范例：\n\n```bash\n[root@centos8 ~]#su bin\nThis account is currently not available.\n[root@centos8 ~]#su -s /bin/bash bin\nbash-4.4$ whoami\nbin\nbash-4.4$\n[root@centos8 ~]#getent passwd tss\ntss:x:59:59:Account used by the trousers package to sandbox the tcsd \ndaemon:/dev/null:/sbin/nologin\n[root@centos8 ~]#su - -s /bin/bash tss\nLast login: Fri Mar 27 09:46:43 CST 2020 on pts/0\nsu: warning: cannot change directory to /dev/null: Not a directory\n-bash: /dev/null/.bash_profile: Not a directory\n[tss@centos8 root]$pwd\n/root\n[tss@centos8 root]$whoami\ntss\n```\n\n范例：\n\n```bash\n[root@centos8 ~]#getent passwd bin\nbin:x:1:1:bin:/bin:/sbin/nologin\n[root@centos8 ~]#su -c 'whoami' bin\nnologin: invalid option -- 'c'\nTry 'nologin --help' for more information.\n[root@centos8 ~]#su -s /bin/bash -c 'whoami' bin\nbin\n```\n\n### 设置密码\n\n![Snipaste_2025-07-02_17-52-50](%E7%94%A8%E6%88%B7%E3%80%81%E7%BB%84%E5%92%8C%E6%9D%83%E9%99%90.assets/Snipaste_2025-07-02_17-52-50.png)\n\npasswd 可以修改用户密码\n\n格式：\n\n```bash\npasswd [OPTIONS] UserName\n```\n\n常用选项：\n\n```bash\n-d：删除指定用户密码\n-l：锁定指定用户\n-u：解锁指定用户\n-e：强制用户下次登录修改密码\n-f：强制操作\n-n mindays：指定最短使用期限\n-x maxdays：最大使用期限\n-w warndays：提前多少天开始警告\n-i inactivedays：非活动期限\n--stdin：从标准输入接收用户密码,Ubuntu无此选项\n```\n\n范例：非交互式修改用户密码\n\n```bash\n#此方式更通用，适用于各种Linux版本，如:ubuntu\n[root@192 ~]# echo -e '123456\\n123456' | passwd wang\nChanging password for user wang.\nNew password: BAD PASSWORD: The password is shorter than 8 characters\nRetype new password: passwd: all authentication tokens updated successfully.\n#适用于红帽系列的Linux版本\n[root@centos8 ~]#echo '123456' | passwd --stdin mage\nChanging password for user mage.\npasswd: all authentication tokens updated successfully.\n#生成随机密码\n[root@centos8 ~]#yum -y install expect\n[root@centos8 ~]#mkpasswd -l 8 -c 2 -C 2 -d 2 -s 2 |tee passwd.txt | passwd --\nstdin wang\nChanging password for user wang.\npasswd: all authentication tokens updated successfully.\n[root@centos8 ~]#cat passwd.txt \n1Q!9Lnl]\n```\n\n范例: Ubuntu 非交互式修改用户密码\n\n```bash\n[root@ubuntu1804 ~]#echo wang:centos |chpasswd\n[root@ubuntu1804 ~]#passwd wang <<EOF\ncentos\ncentos\nEOF\nEnter new UNIX password: Retype new UNIX password: passwd: password updated \nsuccessfully\n[root@ubuntu1804 ~]#echo -e 'magedu\\nmagedu' | passwd wang\nEnter new UNIX password: Retype new UNIX password: passwd: password updated \nsuccessfully\n```\n\n范例：设置用户下次必须更改密码\n\n```bash\n[root@centos8 ~]#useradd wang\n[root@centos8 ~]#echo 123456 | passwd --stdin wang\nChanging password for user wang.\npasswd: all authentication tokens updated successfully.\n[root@centos8 ~]#getent shadow wang\nwang:$6$4f78ko7hJ4fcMvIH$lpbOkFfziDBLT.8XBCi8c/N7wysDAejN5H9Fgxkt99HRDLTEosO43CK\nYi2XSSVHxAK568Olj3C5bwfNExlves/:18348:0:99999:7:::\n[root@centos8 ~]#passwd -e wang\nExpiring password for user wang.\npasswd: Success\n[root@centos8 ~]#getent shadow wang\nwang:$6$4f78ko7hJ4fcMvIH$lpbOkFfziDBLT.8XBCi8c/N7wysDAejN5H9Fgxkt99HRDLTEosO43CK\nYi2XSSVHxAK568Olj3C5bwfNExlves/:0:0:99999:7:::\n[root@centos8 ~]#su - mage\nLast login: Fri Mar 27 09:55:27 CST 2020 on pts/0\n[mage@centos8 ~]$su - wang\nPassword:\nYou are required to change your password immediately (administrator enforced)\nCurrent password:\nNew password:\nBAD PASSWORD: The password is shorter than 8 characters\nNew password:\nBAD PASSWORD: The password fails the dictionary check - it is too \nsimplistic/systematic\nsu: Have exhausted maximum number of retries for service\n[mage@centos8 ~]$su - wang\nPassword:\nYou are required to change your password immediately (administrator enforced)\nCurrent password:\nNew password:\nRetype new password:\nLast login: Fri Mar 27 10:01:20 CST 2020 on pts/0\nLast failed login: Fri Mar 27 10:02:37 CST 2020 on pts/0\nThere was 1 failed login attempt since the last successful login.\n[wang@centos8 ~]$exit\nlogout\n[mage@centos8 ~]$exit\nlogout\n[root@centos8 ~]#getent shadow wang\nwang:$6$TX0iLjF52ByHh1zH$g.WI4LNfauuwgnxpRhd7ePqFKHZ85YU3r6Lh2S0PWRXWGjGlDVtomLW\nqpdiWrT.vwqD/Wzok.kzQhUHc8UCs91:18348:0:99999:7:::\n```\n\n### **修改用户密码策略**\n\nchage 可以修改用户密码策略\n\n格式：\n\n```bash\nchage [OPTION]... LOGIN\n```\n\n常见选项：\n\n```bash\n-d LAST_DAY        #更改密码的时间\n-m --mindays MIN_DAYS\n-M --maxdays MAX_DAYS\n-W --warndays WARN_DAYS\n-I --inactive INACTIVE #密码过期后的宽限期\n-E --expiredate EXPIRE_DATE #用户的有效期\n-l 显示密码策略\n```\n\n范例：\n\n```bash\n[root@centos8 ~]#chage wang\nChanging the aging information for wang\nEnter the new value, or press ENTER for the default\n Minimum Password Age [0]: 3\n Maximum Password Age [99999]: 42\n Last Password Change (YYYY-MM-DD) [2021-03-14]: 2021-03-29    \n Password Expiration Warning [7]: 10\n Password Inactive [-1]: 20\n Account Expiration Date (YYYY-MM-DD) [-1]: 2022-03-29\n[root@centos8 ~]#getent shadow wang\nwang:$6$UpJNaaFGwCqFBSN9$MA4OMcJRJWbNPeMmQPvVjUcI4RYbGywipqYc9hlg87YUXvmpbi.Zcni\n8ktdzw/DuECug4IBoEC/yXYv7dknu/0:18715:3:42:10:20:19080:\n[root@centos8 ~]#chage -m 3 -M 42 -W 14 -I 7 -E 2020-10-10 wang\n[root@centos8 ~]#chage -l wang\nLast password change : Dec 18, 2019\nPassword expires : Jan 29, 2020\nPassword inactive : Feb 05, 2020\nAccount expires : Oct 10, 2020\nMinimum number of days between password change : 3\nMaximum number of days between password change : 42\nNumber of days of warning before password expires : 14\n[root@centos8 ~]#getent shadow wang\nwang:$6$82L7A37XJgzKTegH$lFzqrMHmFwW740U32bvWHUuakPDKOiULE/CxcyDzSe1qi1X2ALulDw1\nWYrhd2wE00.lWO0im5//7biyV.juk5.:18248:3:42:14:7:18545:\n#下一次登录强制重设密码\n[root@centos8 ~]#chage -d 0 wang\n[root@centos8 ~]#getent shadow wang\nwang:$6$82L7A37XJgzKTegH$lFzqrMHmFwW740U32bvWHUuakPDKOiULE/CxcyDzSe1qi1X2ALulDw1\nWYrhd2wE00.lWO0im5//7biyV.juk5.:0:3:42:14:7:18545:\n[root@centos8 ~]#chage -l wang\nLast password change : password must be changed\nPassword expires : password must be changed\nPassword inactive : password must be changed\nAccount expires : Oct 10, 2020\nMinimum number of days between password change : 3\nMaximum number of days between password change : 42\nNumber of days of warning before password expires : 14\n[root@centos8 ~]#getent shadow wang\nwang:$6$82L7A37XJgzKTegH$lFzqrMHmFwW740U32bvWHUuakPDKOiULE/CxcyDzSe1qi1X2ALulDw1\nWYrhd2wE00.lWO0im5//7biyV.juk5.:0:3:42:14:7:18545:\n```\n\n### **创建组**\n\ngroupadd实现创建组\n\n```bash\n#格式\ngroupadd [OPTION]... group_name\n```\n\n常见选项：\n\n```bash\n-g GID 指明GID号；[GID_MIN, GID_MAX]\n-r 创建系统组，CentOS 6之前: ID<500，CentOS 7以后: ID<1000\n```\n\n范例:\n\n```bash\ngroupadd -g 48 -r apache\n```\n\n### **修改组**\n\ngroupmod 组属性修改\n\n格式：\n\n```bash\ngroupmod [OPTION]... group\n```\n\n常见选项：\n\n```bash\n-n group_name: 新名字\n-g GID: 新的GID\n```\n\n### **组删除**\n\ngroupdel 可以删除组\n\n格式\n\n```bash\ngroupdel [options] GROUP\n```\n\n常见选项：\n\n```bash\n-f, --force 强制删除，即使是用户的主组也强制删除组,但会导致无主组的用户不可用无法登录\n```\n\n### **更改组成员和密码**\n\ngpasswd命令，可以更改组密码，也可以修改附加组的成员关系\n\n格式\n\n```bash\ngpasswd [OPTION] GROUP\n```\n\n常见选项：\n\n```bash\n-a user 将user添加至指定组中\n-d user 从指定附加组中移除用户user\n-A user1,user2,... 设置有管理权限的用户列表\n```\n\n范例:\n\n```bash\n#增加组成员\n[root@centos8 ~]#groupadd admins\n[root@centos8 ~]#id wang\nuid=1000(wang) gid=1000(wang) groups=1000(wang)\n[root@centos8 ~]#gpasswd -a wang admins\nAdding user wang to group admins\n[root@centos8 ~]#id wang\nuid=1000(wang) gid=1000(wang) groups=1000(wang),1002(admins)\n[root@centos8 ~]#groups wang\nwang : wang admins\n[root@centos8 ~]#getent group admins\nadmins:x:1002:wang\n#删除组成员\n[root@centos8 ~]#gpasswd -d wang admins\nRemoving user wang from group admins\n[root@centos8 ~]#groups wang\nwang : wang\n[root@centos8 ~]#id wang\nuid=1000(wang) gid=1000(wang) groups=1000(wang)\n[root@centos8 ~]#getent group admins\nadmins:x:1002:\n```\n\n### **更改和查看组成员**\n\ngroupmems 可以管理附加组的成员关系\n\n格式\n\n```bash\ngroupmems [options] [action]\n```\n\n常见选项：\n\n```bash\n-g, --group groupname  #更改为指定组 (只有root)\n-a, --add username   #指定用户加入组\n-d, --delete username #从组中删除用户\n-p, --purge        #从组中清除所有成员\n-l, --list         #显示组成员列表\n```\n\ngroups 可查看用户组关系\n\n格式\n\n```bash\n#查看用户所属组列表\ngroups [OPTION].[USERNAME]...\n```\n\n范例:\n\n```bash\n[root@centos8 ~]#groupmems -l -g admins\n[root@centos8 ~]#groupmems -a mage -g admins\n[root@centos8 ~]#id mage\nuid=1001(mage) gid=1001(mage) groups=1001(mage),1002(admins)\n[root@centos8 ~]#groupmems -l -g admins\nmage \n[root@centos8 ~]#groupmems -a wang -g admins\n[root@centos8 ~]#groupmems -l -g admins\nmage wang \n[root@centos8 ~]#groupmems -d wang -g admins\n[root@centos8 ~]#groups wang\nwang : wang\n[root@centos8 ~]#groupmems -l -g admins\nmage \n[root@centos8 ~]#groupmems -p -g admins\n[root@centos8 ~]#groupmems -l -g admins\n```\n\n### **练习**\n\n1. 创建用户gentoo，附加组为bin和root，默认shell为/bin/csh，注释信息为\"Gentoo Distribution\"\n\n```bash\n[root@192 ~]# useradd -G bin,root -s /bin/csh -c \"Gentoo Distribution\" gentoo\nuseradd: Warning: missing or non-executable shell '/bin/csh'\n[root@192 ~]# id gentoo\nuid=1004(gentoo) gid=1004(gentoo) groups=1004(gentoo),0(root),1(bin)\n[root@192 ~]# cat /etc/passwd | grep gentoo\ngentoo:x:1004:1004:Gentoo Distribution:/home/gentoo:/bin/csh\n```\n\n2. 创建下面的用户、组和组成员关系\n   名字为webs 的组\n     用户nginx，使用webs 作为附加组\n     用户varnish，使用webs 作为附加组\n     用户mysql，不可交互登录系统，且不是webs 的成员，nginx，varnish，mysql密码都是123456\n\n```bash\ngroupadd webs\nuseradd -G webs nginx\nuseradd -G webs varnish\nuseradd -s /sbin/nologin mysql\necho 123456 | passwd --stdin nginx\necho 123456 | passwd --stdin varnish\necho 123456 | passwd --stdin mysql\n```\n\n## **文件权限管理**\n\n程序访问文件时的权限，取决于此程序的发起者\n\n- 进程的发起者，同文件的属主：则应用文件属主权限\n- 进程的发起者，属于文件属组；则应用文件属组权限\n- 应用文件“其它”权限\n\n![image-20250702182635536](%E7%94%A8%E6%88%B7%E3%80%81%E7%BB%84%E5%92%8C%E6%9D%83%E9%99%90.assets/image-20250702182635536.png)\n\n### **文件所有者和属组属性操作**\n\n#### 设置文件的所有者chown\n\nchown 命令可以修改文件的属主，也可以修改文件属组\n\n格式\n\n```bash\nchown [OPTION]... [OWNER][:[GROUP]] FILE...\nchown [OPTION]... --reference=RFILE FILE...\n```\n\n用法说明：\n\n```bash\nOWNER  #只修改所有者\nOWNER:GROUP #同时修改所有者和属组\n:GROUP  #只修改属组，冒号也可用 . 替换\n--reference=RFILE #参考指定的的属性，来修改  \n-R #递归，此选项慎用，非常危险！\n```\n\n范例:\n\n```bash\n[root@centos8 data]#cp /etc/fstab f1.txt\n[root@centos8 data]#pwd\n/data\n[root@centos8 data]#ll\ntotal 4\n-rw-r--r-- 1 root root 709 Dec 18 10:13 f1.txt\n[root@centos8 data]#chown wang f1.txt\n[root@centos8 data]#ll\ntotal 4\n-rw-r--r-- 1 wang root 709 Dec 18 10:13 f1.txt\n[root@centos8 data]#chown :admins f1.txt\n[root@centos8 data]#ll f1.txt\n-rw-r--r-- 1 wang admins 709 Dec 18 10:13 f1.txt\n[root@centos8 data]#chown root.bin f1.txt\n[root@centos8 data]#ll \ntotal 4\n-rw-r--r-- 1 root bin 709 Dec 18 10:13 f1.txt\n[root@centos8 data]#chown wang:admins f1.txt\n[root@centos8 data]#ll\ntotal 4\n-rw-r--r-- 1 wang admins 709 Dec 18 10:13 f1.txt\n[root@centos8 data]#cp /etc/issue f2.txt\n[root@centos8 data]#ll\ntotal 8\n-rw-r--r-- 1 wang admins 709 Dec 18 10:13 f1.txt\n-rw-r--r-- 1 root root  23 Dec 18 10:15 f2.txt\n[root@centos8 data]#chown --reference=f1.txt f2.txt\n[root@centos8 data]#ll\ntotal 8\n-rw-r--r-- 1 wang admins 709 Dec 18 10:13 f1.txt\n-rw-r--r-- 1 wang admins 23 Dec 18 10:15 f2.txt\n```\n\n范例：\n\n```bash\n[root@centos8 ~]#chown -R wang.admins /data/\n```\n\n#### 设置文件的属组信息chgrp\n\nchgrp 命令可以只修改文件的属组\n\n格式\n\n```bash\nchgrp [OPTION]... GROUP FILE...\nchgrp [OPTION]... --reference=RFILE FILE...\n```\n\n-R 递归\n\n范例:\n\n```bash\n[root@centos8 data]#ll f1.txt\n-rw-r--r-- 1 wang root 709 Dec 18 10:13 f1.txt\n[root@centos8 data]#chgrp admins f1.txt \n[root@centos8 data]#ll f1.txt\n-rw-r--r-- 1 wang admins 709 Dec 18 10:13 f1.txt\n```\n\n### **文件权限**\n\n#### **文件权限说明**\n\n文件的权限主要针对三类对象进行定义\n\n```bash\nowner 属主, u\ngroup 属组, g\nother 其他, o\n```\n\n注意：\n\n```bash\n用户的最终权限，是从左向右进行顺序匹配，即，所有者，所属组，其他人，一旦匹配权限立即生效，不再向\n右查看其权限\nr和w权限对root 用户无效\n只要所有者,所属组或other三者之一有x权限,root就可以执行\n```\n\n每个文件针对每类访问者都定义了三种常用权限\n\n每个文件针对每类访问者都定义了三种权限\n\n```bash\nr Readable 4\nw Writable 2\nx eXcutable 1\n```\n\n**对文件的权限：**\n\n```bash\nr 可使用文件查看类工具，比如：cat，可以获取其内容\nw 可修改其内容,文件的是否被删除和文件的权限无关\nx 可以把此文件提请内核启动为一个进程，即可以执行（运行）此文件（此文件的内容必须是可执行）\n文件权限常见组合\n--- 0\nr  4\nr-x 5 \nrw 6\nrwx 7\n```\n\n**对目录的权限：**\n\n```bash\nr 可以使用ls查看此目录中文件名列表,但无法看到文件的属性meta信息,包括inode号,不能查看文件的\n内容\nw 可在此目录中创建文件，也可删除此目录中的文件，而和此被删除的文件的权限无关\nx 可以cd进入此目录，可以使用ls -l file或stat file 查看此目录中指定文件的元数据，当预先知\n道文件名称时,也可以查看文件的内容,属于目录的可访问的最小权限\nX 分配给目录或有部分x权限的文件的x权限，对无任意x权限的文件则不会分配x权限\n目录权限常见组合\n-  不能访问目录\nr-x 只读目录\nrwx 可读也可写目录\n```\n\n面试题：\n\n```bash\nLinux中的目录和文件的权限区别？分别说明读，写和执行权限的区别\n```\n\n文件权限：\n\n1. **读（r）**：允许查看文件内容。\n2. **写（w）**：允许修改文件内容。\n3. **执行（x）**：允许运行文件（如果文件是可执行程序或脚本）。\n\n目录权限：\n\n1. **读（r）**：允许查看目录中的文件列表。\n2. **写（w）**：允许在目录中创建、删除文件或子目录。\n3. **执行（x）**：允许进入目录（即访问目录内容）。\n\n总结来说，文件的执行权限用于运行文件，而目录的执行权限用于访问目录\n\n![image-20250702184153223](%E7%94%A8%E6%88%B7%E3%80%81%E7%BB%84%E5%92%8C%E6%9D%83%E9%99%90.assets/image-20250702184153223.png)\n\n八进制数字\n\n```bash\n--- 000 0\n--x 001 1\n-w- 010 2\n-wx 011 3\nr-- 100 4\nr-x 101 5\nrw- 110 6\nrwx 111 7\n```\n\n例如：\n\n```bash\nrw-r----- 640 \nrwxr-xr-x 755\n```\n\n#### 修改文件权限chmod\n\n格式\n\n```bash\nchmod [OPTION]... MODE[,MODE]... FILE...\nchmod [OPTION]... OCTAL-MODE FILE...\n#参考RFILE文件的权限，将FILE的修改为同RFILE\nchmod [OPTION]... --reference=RFILE FILE...\n```\n\n说明： 模式法格式\n\n```bash\nMODE：who opt permission\nwho:u,g,o,a \nopt:+,-,=\npermission:r,w,x\n修改指定一类用户的所有权限\nu= g= o= ug= a= u=,g=\n修改指定一类用户某个或某个权限\nu+ u- g+ g- o+ o- a+ a- + -\n-R: 递归修改权限\n```\n\n范例: 设置 X 权限\n\n```bash\n[root@centos8 data]#ll dir\ntotal 8\n-rw-r--r-- 1 root root 709 Dec 18 11:09 f1.txt\n-rwxr--r-- 1 root root 709 Dec 18 11:09 f2.txt\ndrw-r--r-- 2 root root  6 Dec 18 11:15 subdir\n[root@centos8 data]#ll -d dir\ndrwxr-xr-- 3 root root 48 Dec 18 11:15 dir\n[root@centos8 data]#chmod -R a+X dir\n[root@centos8 data]#ll -d dir\ndrwxr-xr-x 3 root root 48 Dec 18 11:15 dir\n[root@centos8 data]#ll dir\ntotal 8\n-rw-r--r-- 1 root root 709 Dec 18 11:09 f1.txt\n-rwxr-xr-x 1 root root 709 Dec 18 11:09 f2.txt\ndrwxr-xr-x 2 root root  6 Dec 18 11:15 subdir\n```\n\n范例：\n\n```bash\nchmod u+wx,g-r,o=rx file\nchmod -R g+rwX /testdir\nchmod 600 file\n```\n\n\n\n**范例：面试题**\n\n```bash\n执行 cp /etc/issue /data/dir/ 所需要的最小权限？\n/bin/cp 需要x权限\n/etc/ 需要x权限\n/etc/issue 需要r权限\n/data 需要x权限\n/data/dir 需要w,x权限\n```\n\n\n\n### **新建文件和目录的默认权限**\n\numask 的值可以用来保留在创建文件权限\n\n实现方式：\n\n- 新建文件的默认权限: 666-umask，如果所得结果某位存在执行（奇数）权限，则将其权限+1,偶数不变\n- 新建目录的默认权限: 777-umask \n\n非特权用户umask默认是 002\n\nroot的umask 默认是 022\n\n查看umask\n\n```bash\numask\n#模式方式显示\numask –S \n#输出可被调用\numask –p\n```\n\n修改umask\n\n```bash\numask #\n```\n\n范例\n\n```bash\numask 002\numask u=rw,g=r,o=\n```\n\n持久保存umask\n\n- 全局设置： /etc/bashrc \n- 用户设置：~/.bashrc\n\n范例：\n\n```bash\n[root@centos8 ~]#umask\n0022\n[root@centos8 ~]#( umask 666; touch /data/f1.txt )\n[root@centos8 ~]#umask\n0022\n[root@centos8 ~]#ll /data/f1.txt\n---------- 1 root root 0 Mar 27 14:55 /data/f1.txt\n```\n\n\n\n**练习**\n\n1.当用户docker对/testdir 目录无执行权限时，意味着无法做哪些操作？\n\n```bash\n1.进入该目录（cd /testdir 失败）  \n2.访问目录中的文件或子目录  \n3.执行该目录下的可执行文件  \n4.正常挂载或访问作为 volume 的该目录 \n```\n\n2.当用户mongodb对/testdir 目录无读权限时，意味着无法做哪些操作？\n\n```bash\n1.使用 ls /testdir 查看目录内容。  \n2.列出该目录下的文件名和子目录。  \n3.通过路径访问目录内的文件（即使知道文件名，也可能受限）。  \n4.在程序中读取或扫描该目录中的文件列表。   \n```\n\n3.当用户redis 对/testdir 目录无写权限时，该目录下的只读文件file1是否可修改和删除？\n\n```bash\n1.不能删除 file1 （因为删除文件需要对目录 有写权限）\n2.不能修改 file1的内容 （因为修改需要先打开文件，通常也需要对文件本身有写权限）\n\n但如果 file1 本身是只读的（如只有读权限），即使用户对目录有写权限，也不能修改它的内容。 但是可以删除他\n```\n\n4.当用户zabbix对/testdir 目录有写和执行权限时，该目录下的只读文件file1是否可修改和删除？\n\n```bash\n1.可以删除 file1 （因为删除文件只需要对目录 有写权限）\n2.不能修改 file1 的内容 （因为文件本身是只读的，需要对文件 有写权限才能修改）\n```\n\n5.复制/etc/fstab文件到/var/tmp下，设置文件所有者为tomcat读写权限，所属组为apps组有读写权限，其他人无权限\n\n```bash\ncp /etc/fstab /var/tmp/\nchown tomcat:apps /var/tmp/fstab\nchmod 660 /var/tmp/fstab\n```\n\n- 所有者（tomcat）：读写权限 `rw-` → `6`\n- 所属组（apps）：读写权限 `rw-` → `6`\n- 其他人：无权限 `---` → `0`\n\n6.误删除了用户git的家目录，请重建并恢复该用户家目录及相应的权限属性\n\n```bash\nuseradd git        # 如果用户不存在\nmkdir -p /home/git\ncp -r /etc/skel/. /home/git/\nchown -R git:git /home/git\nchmod 700 /home/git\n```\n\n### **Linux文件系统上的特殊权限**\n\n前面介绍了三种常见的权限：r, w, x 还有三种特殊权限：SUID, SGID, Sticky\n\n特殊权限\n\n- SUID 作用于二进制可执行文件上,用户将继承此程序所有者的权限\n- SGID 作用于二进制可执行文件上,用户将继承此程序所有组的权限作于于目录上, 此目录中新建的文件的所属组将自动从此目录继承\n- STICKY 作用于目录上,此目录中的文件只能由所有者自已来删除\n\n\n\n#### 特殊权限SUID\n\n前提：进程有属主和属组；文件有属主和属组\n\n- 任何一个可执行程序文件能不能启动为进程,取决发起者对程序文件是否拥有执行权限\n- 启动为进程之后，其进程的属主为发起者,进程的属组为发起者所属的组\n- 进程访问文件时的权限，取决于进程的发起者\n\n二进制的可执行文件上SUID权限功能：\n\n- 任何一个可执行程序文件能不能启动为进程：取决发起者对程序文件是否拥有执行权限\n- 启动为进程之后，其进程的属主为原程序文件的属主\n- SUID只对二进制可执行程序有效\n- SUID设置在目录上无意义\n\nSUID权限设定：\n\n```bash\nchmod u+s FILE...\nchmod 4xxx FILE\nchmod u-s FILE...\n```\n\n范例：\n\n```bash\n[root@centos8 ~]#ls -l /usr/bin/passwd\n-rwsr-xr-x. 1 root root 34928 May 11 2019 /usr/bin/passwd\n```\n\n\n\n#### 特殊权限SGID\n\n二进制的可执行文件上SGID权限功能：\n\n- 任何一个可执行程序文件能不能启动为进程：取决发起者对程序文件是否拥有执行权限\n- 启动为进程之后，其进程的属组为原程序文件的属组\n\nSGID权限设定：\n\n```bash\nchmod g+s FILE... \nchmod 2xxx FILE\nchmod g-s FILE...\n```\n\n目录上的SGID权限功能：\n\n默认情况下，用户创建文件时，其属组为此用户所属的主组，一旦某目录被设定了SGID，则对此目录有\n\n写权限的用户在此目录中创建的文件所属的组为此目录的属组，通常用于创建一个协作目录\n\nSGID权限设定：\n\n```bash\nchmod g+s DIR...\nchmod 2xxx DIR\nchmod g-s DIR...\n```\n\n#### **特殊权限** **Sticky** 位\n\n具有写权限的目录通常用户可以删除该目录中的任何文件，无论该文件的权限或拥有权\n\n在目录设置Sticky 位，只有文件的所有者或root可以删除该文件\n\nsticky 设置在文件上无意义\n\nSticky权限设定：\n\n```bash\nchmod o+t DIR...\nchmod 1xxx DIR\nchmod o-t DIR...\n```\n\n范例：\n\n```bash\n[root@centos8 ~]#ll -d /tmp\ndrwxrwxrwt. 15 root root 4096 Dec 12 20:16 /tmp\n```\n\n#### **特殊权限数字法**\n\nSUID SGID STICKY\n\n```bash\n000 0\n001 1\n010 2\n011 3\n100 4\n101 5\n110 6\n111 7\n```\n\n范例：\n\n```bash\nchmod 4777 /tmp/a.txt\n```\n\n权限位映射\n\nSUID: user,占据属主的执行权限位\n\n s：属主拥有x权限\n\n S：属主没有x权限\n\nSGID: group,占据属组的执行权限位\n\n s： group拥有x权限\n\n S：group没有x权限 \n\nSticky: other,占据other的执行权限位\n\n t：other拥有x权限\n\n T：other没有x权限\n\n### 设定文件特殊属性\n\n设置文件的特殊属性，可以访问 root 用户误操作删除或修改文件\n\n不能删除，改名，更改\n\n```bash\nchattr +i file\n```\n\n只能追加内容，不能删除，改名\n\n```bash\nchattr +a file\n```\n\n显示特定属性\n\n```bash\nlsattr\n```\n\n范例\n\n```bash\n[root@centos8 data]#chattr +i dir\n[root@centos8 data]#lsattr dir\n------------------ dir/fstab\n------------------ dir/f1.txt\n[root@centos8 data]#lsattr *\n------------------ dir/fstab\n------------------ dir/f1.txt\n------------------ f11.txt\n------------------ f22.txt\n[root@centos8 data]#ll\ntotal 8\ndrwxr-xr-x 2 root root 33 Dec 18 14:32 dir\n-rw-r--r-- 1 root root 719 Dec 18 14:30 f11.txt\n-rw-r--r-- 1 root root  6 Dec 18 14:30 f22.txt\n[root@centos8 data]#rm -rf dir\nrm: cannot remove 'dir/fstab': Operation not permitted\nrm: cannot remove 'dir/f1.txt': Operation not permitted\n[root@centos8 data]#lsattr \n------------------ ./f11.txt\n------------------ ./f22.txt\n----i------------- ./dir\n[root@centos8 data]#chattr -i dir\n[root@centos8 data]#lsattr \n------------------ ./f11.txt\n------------------ ./f22.txt\n------------------ ./dir\n```\n\n### 访问控制列表 ACL\n\n#### ACL权限功能\n\nACL：Access Control List，实现灵活的权限管理\n\n除了文件的所有者，所属组和其它人，可以对更多的用户设置权限\n\nCentOS7 默认创建的xfs和ext4文件系统具有ACL功能\n\nCentOS7 之前版本，默认手工创建的ext4文件系统无ACL功能,需手动增加\n\n```bash\ntune2fs –o acl /dev/sdb1\nmount –o acl /dev/sdb1 /mnt/test\n```\n\nACL生效顺序：\n\n```bash\n所有者，自定义用户，所属组|自定义组，其他人\n```\n\n#### ACL相关命令\n\n```bash\nsetfacl 可设置ACL权限\ngetfacl 可查看设置的ACL权限\n```\n\n范例:\n\n```bash\n[root@centos8 data]#ll f1.txt\n-rw-r--r-- 1 root root 709 Dec 18 14:37 f1.txt\n[root@centos8 data]#setfacl -m u:wang:- f1.txt\n[root@centos8 data]#ll \ntotal 4\n-rw-r--r--+ 1 root root 709 Dec 18 14:37 f1.txt\n[root@centos8 data]#getfacl f1.txt\n# file: f1.txt\n# owner: root\n# group: root\nuser::rw\u0002user:wang:---\ngroup::r--\nmask::r--\nother::r--\n[root@centos8 data]#su wang\n[wang@centos8 data]$cat f1.txt\ncat: f1.txt: Permission denied\n[wang@centos8 data]$echo xx >> f1.txt\nbash: f1.txt: Permission denied\n```\n\n范例:\n\n```bash\n[root@centos8 data]#getfacl f1.txt\n# file: f1.txt\n# owner: root\n# group: root\nuser::rw\u0002group::r--\nother::r--\n[root@centos8 data]#setfacl -m u:wang:0 f1.txt\n[root@centos8 data]#setfacl -m g:admins:w f1.txt\n[root@centos8 data]#ll f1.txt\n-rw-rw-r--+ 1 root root 718 Dec 18 14:44 f1.txt\n[root@centos8 data]#getfacl f1.txt\n# file: f1.txt\n# owner: root\n# group: root\nuser::rw\u0002user:wang:---\ngroup::r--\ngroup:admins:-w\u0002mask::rw\u0002other::r--\n[root@centos8 data]#id wang\nuid=1000(wang) gid=1000(wang) groups=1000(wang)\n[root@centos8 data]#id mage\nuid=1001(mage) gid=1001(mage) groups=1001(mage)\n[root@centos8 data]#su mage\n[mage@centos8 data]$cat f1.txt\n#\n# /etc/fstab\n# Created by anaconda on Wed Dec 11 11:11:16 2019\n#\n# Accessible filesystems, by reference, are maintained under '/dev/disk/'.\n# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info.\n#\n# After editing this file, run 'systemctl daemon-reload' to update systemd\n# units generated from this file.\n#\nUUID=1b950ef9-7142-46bd-975c-c4ac1e0d47e8 /            xfs   \ndefaults    0 0\nUUID=667a4c81-8b4b-4a39-a111-b11cb6d09309 /boot          ext4  \ndefaults    1 2\nUUID=38d14714-c018-41d5-922c-49e415decbca /data          xfs   \ndefaults    0 0\nUUID=a0efb2bb-8227-4317-a79d-0a70d515046c swap          swap  \ndefaults    0 0\nmagedata\n[mage@centos8 data]$echo magedata2 >> f1.txt\nbash: f1.txt: Permission denied\n[mage@centos8 data]$exit\nexit\n[root@centos8 data]#gpasswd -a mage admins\nAdding user mage to group admins\n[root@centos8 data]#id mage\nuid=1001(mage) gid=1001(mage) groups=1001(mage),1002(admins)\n[root@centos8 data]#su mage\n[mage@centos8 data]$echo magedata3 >> f1.txt \n[mage@centos8 data]$cat f1.txt\ncat: f1.txt: Permission denied\n[mage@centos8 data]$exit\nexit\n[root@centos8 data]#su wang\n[wang@centos8 data]$cat f1.txt\ncat: f1.txt: Permission denied\n[wang@centos8 data]$echo wangdata >> f1.txt\nbash: f1.txt: Permission denied\n[wang@centos8 data]$exit\nexit\n[root@centos8 data]#groupmems -a wang -g admins\n[root@centos8 data]#id wang\nuid=1000(wang) gid=1000(wang) groups=1000(wang),1002(admins)\n[root@centos8 data]#su wang\n[wang@centos8 data]$getfacl f1.txt \n# file: f1.txt\n# owner: root\n# group: root\nuser::rw\u0002user:wang:---\ngroup::r--\ngroup:admins:-w\u0002mask::rw\u0002other::r--\n[wang@centos8 data]$cat f1.txt\ncat: f1.txt: Permission denied\n[wang@centos8 data]$echo wangdata2 >> f1.txt\nbash: f1.txt: Permission denied\n```\n\n\n\n范例：\n\n```bash\nmount -o acl /directory\ngetfacl file |directory\nsetfacl -m u:wang:rwx file|directory\nsetfacl -m g:admins:rw file| directory\nsetfacl -x u:wang file |directory\n#清除所有ACL权限\nsetfacl -b file1 \n#复制file1的acl权限给file2\ngetfacl file1 | setfacl --set-file=- file2\n```\n\n\n\n**mask 权限**\n\n- mask只影响除所有者和other的之外的人和组的最大权限\n- mask需要与用户的权限进行逻辑与运算后，才能变成有限的权限(Effective Permission)\n- 用户或组的设置必须存在于mask权限设定范围内才会生效\n\n范例：\n\n```bash\nsetfacl -m mask::rx file\n```\n\n范例:\n\n```bash\n[root@centos8 data]#ll f1.txt\n-rw-rw-r--+ 1 root root 728 Dec 18 14:51 f1.txt\n[root@centos8 data]#chmod g=r f1.txt\n[root@centos8 data]#ll f1.txt\n-rw-r--r--+ 1 root root 728 Dec 18 14:51 f1.txt\n[root@centos8 data]#getfacl f1.txt\n# file: f1.txt\n# owner: root\n# group: root\nuser::rw\u0002user:wang:---\ngroup::r--\ngroup:admins:-w- #effective:---\nmask::r--\nother::r--\n[root@centos8 data]#setfacl -m mask::rw f1.txt\n[root@centos8 data]#getfacl f1.txt\n# file: f1.txt\n# owner: root\n# group: root\nuser::rw\u0002user:wang:---\ngroup::r--\ngroup:admins:-w\u0002mask::rw\u0002other::r--\n[root@centos8 data]#setfacl -m u:wang:rwx f1.txt\n[root@centos8 data]#getfacl f1.txt\n# file: f1.txt\n# owner: root\n# group: root\nuser::rw\u0002user:wang:rwx\ngroup::r--\ngroup:admins:-w\u0002mask::rwx\nother::r--\n[root@centos8 data]#setfacl -m mask::rw f1.txt\n[root@centos8 data]#getfacl f1.txt\n# file: f1.txt\n# owner: root\n# group: root\nuser::rw\u0002user:wang:rwx #effective:rw\u0002group::r--\ngroup:admins:-w\u0002mask::rw\u0002other::r--\n```\n\n--set选项会把原有的ACL项都删除，用新的替代，需要注意的是一定要包含UGO的设置，不能象-m一样只是添加ACL就可以\n\n范例：\n\n```bash\nsetfacl --set u::rw,u:wang:rw,g::r,o::- file1\n```\n\n<div class=\"tbsm\" style=\"margin-top:54px;\">\n<div class=\"tbsm-top\"><span><svg t=\"1674654360507\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"987\" data-spm-anchor-id=\"a313x.7781069.0.i0\" width=\"35\" height=\"35\"><path d=\"M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z\" fill=\"#66EEFF\" p-id=\"988\"></path><path d=\"M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z\" fill=\"#C2F8FF\" p-id=\"989\"></path></svg></span><span style=\"font-size:30px;\"> 特别声明</span></div>\n<div class=\"tbsm-wz\">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div>\n</div>\n\n","tags":["运维笔记"],"categories":["运维"]}]